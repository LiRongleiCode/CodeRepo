
                    Nyquest Technology Co., Ltd.

NYASM 2.35

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8BM72A,c=on
                                    1-    9     	#include "ny8bm72a.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_multi_16b
                                    1-   15     	extern	_tick_Event
                                    1-   16     	extern	_tick_Init
                                    1-   17     	extern	_tick_GetTickCount
                                    1-   18     	extern	_tick_GetElapsedTime
                                    1-   19     	extern	_PORTAbits
                                    1-   20     	extern	_PORTBbits
                                    1-   21     	extern	_PORTCbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_CPHCONbits
                                    1-   27     	extern	_INTEbits
                                    1-   28     	extern	_INTFbits
                                    1-   29     	extern	_ADMDbits
                                    1-   30     	extern	_ADRbits
                                    1-   31     	extern	_ADVREFHbits
                                    1-   32     	extern	_ADCRbits
                                    1-   33     	extern	_AWUCONbits
                                    1-   34     	extern	_PACONbits
                                    1-   35     	extern	_INTEDGbits
                                    1-   36     	extern	_ANAENbits
                                    1-   37     	extern	_RFCbits
                                    1-   38     	extern	_INTE2bits
                                    1-   39     	extern	_INDF
                                    1-   40     	extern	_TMR0
                                    1-   41     	extern	_PCL
                                    1-   42     	extern	_STATUS
                                    1-   43     	extern	_FSR
                                    1-   44     	extern	_PORTA
                                    1-   45     	extern	_PORTB
                                    1-   46     	extern	_PORTC
                                    1-   47     	extern	_PCON
                                    1-   48     	extern	_BWUCON
                                    1-   49     	extern	_PCHBUF
                                    1-   50     	extern	_ABPLCON
                                    1-   51     	extern	_BPHCON
                                    1-   52     	extern	_CPHCON
                                    1-   53     	extern	_INTE
                                    1-   54     	extern	_INTF
                                    1-   55     	extern	_ADMD
                                    1-   56     	extern	_ADR
                                    1-   57     	extern	_ADD
                                    1-   58     	extern	_ADVREFH
                                    1-   59     	extern	_ADCR
                                    1-   60     	extern	_AWUCON
                                    1-   61     	extern	_PACON
                                    1-   62     	extern	_INTEDG
                                    1-   63     	extern	_TMRH
                                    1-   64     	extern	_ANAEN
                                    1-   65     	extern	_RFC
                                    1-   66     	extern	_TM3RH
                                    1-   67     	extern	_OSCCALH
                                    1-   68     	extern	_OSCCALL
                                    1-   69     	extern	_INTE2
                                    1-   70     	extern	_TMR1
                                    1-   71     	extern	_T1CR1
                                    1-   72     	extern	_T1CR2
                                    1-   73     	extern	_PWM1DUTY
                                    1-   74     	extern	_PS1CV
                                    1-   75     	extern	_BZ1CR
                                    1-   76     	extern	_IRCR
                                    1-   77     	extern	_TBHP
                                    1-   78     	extern	_TBHD
                                    1-   79     	extern	_TMR2
                                    1-   80     	extern	_T2CR1
                                    1-   81     	extern	_T2CR2
                                    1-   82     	extern	_PWM2DUTY
                                    1-   83     	extern	_PS2CV
                                    1-   84     	extern	_BZ2CR
                                    1-   85     	extern	_OSCCR
                                    1-   86     	extern	_TMR3
                                    1-   87     	extern	_T3CR1
                                    1-   88     	extern	_T3CR2
                                    1-   89     	extern	_PWM3DUTY
                                    1-   90     	extern	_PS3CV
                                    1-   91     	extern	_BZ3CR
                                    1-   92     	extern	_IOSTA
                                    1-   93     	extern	_IOSTB
                                    1-   94     	extern	_IOSTC
                                    1-   95     	extern	_APHCON
                                    1-   96     	extern	_PS0CV
                                    1-   97     	extern	_CPLCON
                                    1-   98     	extern	_BODCON
                                    1-   99     	extern	_CODCON
                                    1-  100     	extern	_CMPCR
                                    1-  101     	extern	_PCON1
                                    1-  102     	extern	_T0MD
                                    1-  103     	extern	___sdcc_saved_fsr
                                    1-  104     	extern	___sdcc_saved_stk00
                                    1-  105     	extern	___sdcc_saved_stk01
                                    1-  106     	extern	__nyc_ny8_startup
                                    1-  107     ;--------------------------------------------------------
                                    1-  108     ; global declarations
                                    1-  109     ;--------------------------------------------------------
                                    1-  110     	extern	_turnOffDevice
                                    1-  111     	extern	_delay
                                    1-  112     	extern	_charge_process
                                    1-  113     	extern	_key_process
                                    1-  114     	extern	_isr
                                    1-  115     	extern	_key_initial
                                    1-  116     	extern	_volume_initial
                                    1-  117     	extern	_digital_initial
                                    1-  118     	extern	_Open_digital
                                    1-  119     	extern	_Close_digital
                                    1-  120     	extern	_digital_process_task
                                    1-  121     	extern	_key_scan_task
                                    1-  122     	extern	_charger_scan_task
                                    1-  123     	extern	_v1_mode
                                    1-  124     	extern	_v2_mode
                                    1-  125     	extern	_v3_mode
                                    1-  126     	extern	_v0_mode
                                    1-  127     	extern	_stop_buzzer
                                    1-  128     	extern	_start_buzzer
                                    1-  129     	extern	_turnOnDevice_buzzer
                                    1-  130     	extern	_buzzer_task
                                    1-  131     	extern	_key_process_task
                                    1-  132     	extern	_led_task
                                    1-  133     	extern	_charge_check_Task
                                    1-  134     	extern	_ModeChoode
                                    1-  135     	extern	_main
                                    1-  136     	extern	_timer
                                    1-  137     	extern	_get_key_status
                                    1-  138     	extern	_turnOnFlag
                                    1-  139     	extern	_key_press_flag
                                    1-  140     	extern	_key_press_timer
                                    1-  141     	extern	_key_click
                                    1-  142     	extern	_control_digital
                                    1-  143     	extern	_key_long
                                    1-  144     	extern	_key_release_flag
                                    1-  145     	extern	_key_release_timer
                                    1-  146     	extern	_key_long_flag
                                    1-  147     	extern	_sleep_flag
                                    1-  148     	extern	_charge_remove_timer
                                    1-  149     	extern	_charge_plugin_timer
                                    1-  150     	extern	_charge_remove_flag
                                    1-  151     	extern	_charge_plugin_flag
                                    1-  152     	extern	_charge_on_status
                                    1-  153     	extern	_charge_remove_status
                                    1-  154     	extern	_weekup_by_int0
                                    1-  156     	extern PSAVE
                                    1-  157     	extern SSAVE
                                    1-  158     	extern WSAVE
                                    1-  159     	extern STK04
                                    1-  160     	extern STK03
                                    1-  161     	extern STK02
                                    1-  162     	extern STK01
                                    1-  163     	extern STK00
                                    1-  165     .segment "uninit", 0x20000040
 20000040                           1-  166     PSAVE:
                                    1-  167     	.res 1
 20000041                           1-  168     SSAVE:
                                    1-  169     	.res 1
 20000042                           1-  170     WSAVE:
                                    1-  171     	.res 1
 20000043                           1-  172     STK04:
                                    1-  173     	.res 1
 20000044                           1-  174     STK03:
                                    1-  175     	.res 1
 20000045                           1-  176     STK02:
                                    1-  177     	.res 1
 20000046                           1-  178     STK01:
                                    1-  179     	.res 1
 20000047                           1-  180     STK00:
                                    1-  181     	.res 1
                                    1-  183     ;--------------------------------------------------------
                                    1-  184     ; global definitions
                                    1-  185     ;--------------------------------------------------------
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     ; absolute symbol definitions
                                    1-  188     ;--------------------------------------------------------
                                    1-  189     ;--------------------------------------------------------
                                    1-  190     ; compiler-defined variables
                                    1-  191     ;--------------------------------------------------------
                                    1-  192     .segment "uninit"
     0000                           1-  193     r0x104D:
                                    1-  194     	.res	1
                                    1-  195     .segment "uninit"
     0000                           1-  196     r0x104E:
                                    1-  197     	.res	1
                                    1-  198     .segment "uninit"
     0000                           1-  199     r0x104F:
                                    1-  200     	.res	1
                                    1-  201     .segment "uninit"
     0000                           1-  202     r0x1050:
                                    1-  203     	.res	1
                                    1-  204     .segment "uninit"
     0000                           1-  205     r0x1051:
                                    1-  206     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     r0x1052:
                                    1-  209     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x104B:
                                    1-  212     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     r0x1042:
                                    1-  215     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     r0x104C:
                                    1-  218     	.res	1
                                    1-  219     .segment "uninit"
     0000                           1-  220     r0x104A:
                                    1-  221     	.res	1
                                    1-  222     .segment "uninit"
     0000                           1-  223     r0x1043:
                                    1-  224     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     r0x1049:
                                    1-  227     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x1044:
                                    1-  230     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x1045:
                                    1-  233     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1046:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x1047:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x1048:
                                    1-  242     	.res	1
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     ; initialized data
                                    1-  245     ;--------------------------------------------------------
                                    1-  247     .segment "idata"
     0000                           1-  248     _timer:
     0000 0000                      1-  249     	dw	0x00
                                    1-  253     .segment "idata"
     0000                           1-  254     _TrunOnDeviceFlag:
     0000 0000                      1-  255     	dw	0x00
                                    1-  259     .segment "idata"
     0000                           1-  260     _TrunOffDeviceFlag:
     0000 0000                      1-  261     	dw	0x00
                                    1-  265     .segment "idata"
     0000                           1-  266     _get_key_status:
     0000 0000                      1-  267     	dw	0x00
                                    1-  271     .segment "idata"
     0000                           1-  272     _buzzerOneTime:
     0000 0000                      1-  273     	dw	0x00
                                    1-  277     .segment "idata"
     0000                           1-  278     _buzzerTwoTime:
     0000 0000                      1-  279     	dw	0x00
                                    1-  283     .segment "idata"
     0000                           1-  284     _buzzerThreeTime:
     0000 0000                      1-  285     	dw	0x00
                                    1-  289     .segment "idata"
     0000                           1-  290     _buzzerFourTime:
     0000 0000                      1-  291     	dw	0x00
                                    1-  295     .segment "idata"
     0000                           1-  296     _deviceWorkStatus:
     0000 0000                      1-  297     	dw	0x00
                                    1-  301     .segment "idata"
     0000                           1-  302     _recordDevice:
     0000 0000                      1-  303     	dw	0x00
                                    1-  307     .segment "idata"
     0000                           1-  308     _wakeupFlag:
     0000 0000                      1-  309     	dw	0x00
                                    1-  313     .segment "idata"
     0000                           1-  314     _turnOnOffBuzzer:
     0000 0000                      1-  315     	dw	0x00
                                    1-  319     .segment "idata"
     0000                           1-  320     _turnOnFlag:
     0000 0000                      1-  321     	dw	0x00
                                    1-  325     .segment "idata"
     0000                           1-  326     _key_press_flag:
     0000 0000                      1-  327     	dw	0x00
                                    1-  331     .segment "idata"
     0000                           1-  332     _key_press_timer:
     0000 0000 0000                 1-  333     	dw	0x00, 0x00
                                    1-  337     .segment "idata"
     0000                           1-  338     _key_click:
     0000 0000                      1-  339     	dw	0x00
                                    1-  343     .segment "idata"
     0000                           1-  344     _control_digital:
     0000 0000                      1-  345     	dw	0x00
                                    1-  349     .segment "idata"
     0000                           1-  350     _key_long:
     0000 0000                      1-  351     	dw	0x00
                                    1-  355     .segment "idata"
     0000                           1-  356     _key_release_flag:
     0000 0001                      1-  357     	dw	0x01
                                    1-  361     .segment "idata"
     0000                           1-  362     _key_release_timer:
     0000 0000                      1-  363     	dw	0x00
                                    1-  367     .segment "idata"
     0000                           1-  368     _key_long_flag:
     0000 0000                      1-  369     	dw	0x00
                                    1-  373     .segment "idata"
     0000                           1-  374     _sleep_flag:
     0000 0000                      1-  375     	dw	0x00
                                    1-  379     .segment "idata"
     0000                           1-  380     _charge_remove_timer:
     0000 0000                      1-  381     	dw	0x00
                                    1-  385     .segment "idata"
     0000                           1-  386     _charge_plugin_timer:
     0000 0000                      1-  387     	dw	0x00
                                    1-  391     .segment "idata"
     0000                           1-  392     _charge_remove_flag:
     0000 0000                      1-  393     	dw	0x00
                                    1-  397     .segment "idata"
     0000                           1-  398     _charge_plugin_flag:
     0000 0001                      1-  399     	dw	0x01
                                    1-  403     .segment "idata"
     0000                           1-  404     _charge_on_status:
     0000 0000                      1-  405     	dw	0x00
                                    1-  409     .segment "idata"
     0000                           1-  410     _charge_remove_status:
     0000 0000                      1-  411     	dw	0x00
                                    1-  415     .segment "idata"
     0000                           1-  416     _weekup_by_int0:
     0000 0000                      1-  417     	dw	0x00
                                    1-  421     .segment "idata"
     0000                           1-  422     _Couter:
     0000 0000                      1-  423     	dw	0x00
                                    1-  427     .segment "idata"
     0000                           1-  428     _digital_process_task_digitalProcessTimer_65536_38:
     0000 0000 0000 0000 0000       1-  429     	dw	0x00, 0x00, 0x00, 0x00
                                    1-  433     .segment "idata"
     0000                           1-  434     _key_scan_task_keyScanTimer_65536_43:
     0000 0000 0000 0000 0000       1-  435     	dw	0x00, 0x00, 0x00, 0x00
                                    1-  439     .segment "idata"
     0000                           1-  440     _charger_scan_task_ChargerScanTimer_65536_47:
     0000 0000 0000 0000 0000       1-  441     	dw	0x00, 0x00, 0x00, 0x00
                                    1-  445     .segment "idata"
     0000                           1-  446     _buzzer_task_ucBuzzerOnTimer_65536_65:
     0000 0000                      1-  447     	dw	0x00
                                    1-  451     .segment "idata"
     0000                           1-  452     _buzzer_task_ucBuzzerOffTimer_65536_65:
     0000 0000                      1-  453     	dw	0x00
                                    1-  457     .segment "idata"
     0000                           1-  458     _buzzer_task_BuzzerTimes_65536_65:
     0000 0000                      1-  459     	dw	0x00
                                    1-  463     .segment "idata"
     0000                           1-  464     _buzzer_task_startBuzzerOffFlag_65536_65:
     0000 0000                      1-  465     	dw	0x00
                                    1-  469     .segment "idata"
     0000                           1-  470     _key_process_task_keyProcessTimer_65536_102:
     0000 0000 0000 0000 0000       1-  471     	dw	0x00, 0x00, 0x00, 0x00
                                    1-  475     .segment "idata"
     0000                           1-  476     _key_process_task_FlashFlag_65536_102:
     0000 0000                      1-  477     	dw	0x00
                                    1-  481     .segment "idata"
     0000                           1-  482     _TrunOffDeviceTimer:
     0000 0000 0000 0000 0000       1-  483     	dw	0x00, 0x00, 0x00, 0x00
                                    1-  487     .segment "idata"
     0000                           1-  488     _led_task_TrunOnDeviceTimer_65536_114:
     0000 0000 0000 0000 0000       1-  489     	dw	0x00, 0x00, 0x00, 0x00
                                    1-  493     .segment "idata"
     0000                           1-  494     _led_task_TrunOffDeviceTimer_65536_114:
     0000 0000 0000 0000 0000       1-  495     	dw	0x00, 0x00, 0x00, 0x00
                                    1-  499     .segment "idata"
     0000                           1-  500     _led_task_flag_65536_114:
     0000 0000                      1-  501     	dw	0x00
                                    1-  505     .segment "idata"
     0000                           1-  506     _charge_check_Task_Waiter8sTimer_65536_127:
     0000 0000 0000 0000 0000       1-  507     	dw	0x00, 0x00, 0x00, 0x00
                                    1-  510     ;--------------------------------------------------------
                                    1-  511     ; overlayable items in internal ram 
                                    1-  512     ;--------------------------------------------------------
                                    1-  513     ;	udata_ovr
                                    1-  514     ;--------------------------------------------------------
                                    1-  515     ; reset vector 
                                    1-  516     ;--------------------------------------------------------
                                    1-  517     ORG	0x0000
     0000 3rrr                      1-  518     	LGOTO	__nyc_ny8_startup
                                    1-  519     ;--------------------------------------------------------
                                    1-  520     ; interrupt and initialization code
                                    1-  521     ;--------------------------------------------------------
                                    1-  522     ORG 0x0008
                                    1-  523     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  525     .segment "code"
     0000                           1-  526     __sdcc_interrupt:
                                    1-  527     ;***
                                    1-  528     ;  pBlock Stats: dbName = I
                                    1-  529     ;***
                                    1-  530     ;functions called:
                                    1-  531     ;   _delay
                                    1-  532     ;   _tick_Event
                                    1-  533     ;   _key_process
                                    1-  534     ;   _charge_process
                                    1-  535     ;   _delay
                                    1-  536     ;   _tick_Event
                                    1-  537     ;   _key_process
                                    1-  538     ;   _charge_process
                                    1-  539     ;8 compiler assigned registers:
                                    1-  540     ;   STK00
                                    1-  541     ;   STK01
                                    1-  542     ;   r0x104D
                                    1-  543     ;   r0x104E
                                    1-  544     ;   r0x104F
                                    1-  545     ;   r0x1050
                                    1-  546     ;   r0x1051
                                    1-  547     ;   r0x1052
                                    1-  548     ;; Starting pCode block
     0000                           1-  549     _isr:
                                    1-  550     ; 0 exit points
                                    1-  551     	.line	75, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  552     	MOVAR	WSAVE
     0001 1503                      1-  553     	SWAPR	STATUS,W
     0002 0283                      1-  554     	CLRR	STATUS
     0003 00rr                      1-  555     	MOVAR	SSAVE
     0004 010A                      1-  556     	MOVR	PCHBUF,W
     0005 028A                      1-  557     	CLRR	PCHBUF
     0006 00rr                      1-  558     	MOVAR	PSAVE
     0007 0104                      1-  559     	MOVR	FSR,W
                                    1-  560     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 00rr                      1-  561     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  562     	MOVR	STK00,W
                                    1-  563     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  108 m1      .banksel ram_address
     000C 00rr                      1-  564     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  565     	MOVR	STK01,W
                                    1-  566     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  108 m1      .banksel ram_address
     000F 00rr                      1-  567     	MOVAR	___sdcc_saved_stk01
                                    1-  568     	.line	77, "main.c"; 	unsigned int x = 0;
                                    1-  569     	BANKSEL	r0x104D
     0010 rrrr                      3-  108 m1      .banksel ram_address
     0011 02rr                      1-  570     	CLRR	r0x104D
                                    1-  571     	BANKSEL	r0x104E
     0012 rrrr                      3-  108 m1      .banksel ram_address
     0013 02rr                      1-  572     	CLRR	r0x104E
                                    1-  573     	.line	78, "main.c"; 	if(INTFbits.INT0IF)
     0014 09rr                      1-  574     	BTRSS	_INTFbits,2
                                    1-  575     	MGOTO	_00106_DS_
     0015 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  576     	.line	80, "main.c"; 	INTF = (char)~(C_INT_EXT0);			// Clear INT0IF(External interrupt 0 flag bit)		
     0016 21FB                      1-  577     	MOVIA	0xfb
     0017 00rr                      1-  578     	MOVAR	_INTF
                                    1-  579     	.line	81, "main.c"; 	weekup_by_int0 = 1;
     0018 2101                      1-  580     	MOVIA	0x01
                                    1-  581     	BANKSEL	_weekup_by_int0
     0019 rrrr                      3-  108 m1      .banksel ram_address
     001A 00rr                      1-  582     	MOVAR	_weekup_by_int0
     001B                           1-  583     _00106_DS_:
                                    1-  584     	.line	83, "main.c"; 	if(INTFbits.PABIF)
     001B 08rr                      1-  585     	BTRSS	_INTFbits,1
                                    1-  586     	MGOTO	_00117_DS_
     001C 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  587     	.line	85, "main.c"; 	INTFbits.PABIF = 0;					// Clear PABIF(PortB input change interrupt flag bit)
     001D 21FD                      1-  588     	MOVIA	0xfd
     001E 00rr                      1-  589     	MOVAR	(_INTFbits + 0)
                                    1-  590     	.line	86, "main.c"; 	while((~PORTB)&0x40)
                                    1-  591     	BANKSEL	r0x104F
     001F rrrr                      3-  108 m1      .banksel ram_address
     0020 02rr                      1-  592     	CLRR	r0x104F
                                    1-  593     	BANKSEL	r0x1050
     0021 rrrr                      3-  108 m1      .banksel ram_address
     0022 02rr                      1-  594     	CLRR	r0x1050
     0023                           1-  595     _00110_DS_:
     0023 01rr                      1-  596     	MOVR	_PORTB,W
                                    1-  597     	BANKSEL	r0x1051
     0024 rrrr                      3-  108 m1      .banksel ram_address
     0025 00rr                      1-  598     	MOVAR	r0x1051
                                    1-  599     	BANKSEL	r0x1052
     0026 rrrr                      3-  108 m1      .banksel ram_address
     0027 02rr                      1-  600     	CLRR	r0x1052
                                    1-  601     	BANKSEL	r0x1051
     0028 rrrr                      3-  108 m1      .banksel ram_address
     0029 07rr                      1-  602     	COMR	r0x1051,W
     002A 00rr                      1-  603     	MOVAR	r0x1051
                                    1-  604     	BANKSEL	r0x1052
     002B rrrr                      3-  108 m1      .banksel ram_address
     002C 07rr                      1-  605     	COMR	r0x1052,W
     002D 00rr                      1-  606     	MOVAR	r0x1052
                                    1-  607     	BANKSEL	r0x1051
     002E rrrr                      3-  108 m1      .banksel ram_address
     002F 0Brr                      1-  608     	BTRSS	r0x1051,6
                                    1-  609     	MGOTO	_00112_DS_
     0030 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  610     	.line	88, "main.c"; 	x++;
                                    1-  611     	BANKSEL	r0x104F
     0031 rrrr                      3-  108 m1      .banksel ram_address
     0032 05rr                      1-  612     	INCR	r0x104F,F
     0033 0903                      1-  613     	BTRSS	STATUS,2
                                    1-  614     	MGOTO	_00002_DS_
     0034 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  615     	BANKSEL	r0x1050
     0035 rrrr                      3-  108 m1      .banksel ram_address
     0036 05rr                      1-  616     	INCR	r0x1050,F
     0037                           1-  617     _00002_DS_:
                                    1-  618     	BANKSEL	r0x104F
     0037 rrrr                      3-  108 m1      .banksel ram_address
     0038 01rr                      1-  619     	MOVR	r0x104F,W
                                    1-  620     	BANKSEL	r0x104D
     0039 rrrr                      3-  108 m1      .banksel ram_address
     003A 00rr                      1-  621     	MOVAR	r0x104D
                                    1-  622     	BANKSEL	r0x1050
     003B rrrr                      3-  108 m1      .banksel ram_address
     003C 01rr                      1-  623     	MOVR	r0x1050,W
                                    1-  624     	BANKSEL	r0x104E
     003D rrrr                      3-  108 m1      .banksel ram_address
     003E 00rr                      1-  625     	MOVAR	r0x104E
                                    1-  626     	.line	89, "main.c"; 	PORTA &= 0xFB;
                                    1-  627     	BANKSEL	_PORTA
     003F rrrr                      3-  108 m1      .banksel ram_address
     0040 1Drr                      1-  628     	BCR	_PORTA,2
                                    1-  629     	.line	90, "main.c"; 	PORTB |= 0x20;
     0041 1Arr                      1-  630     	BSR	_PORTB,5
                                    1-  631     	.line	91, "main.c"; 	wakeupFlag = 1;
     0042 2101                      1-  632     	MOVIA	0x01
                                    1-  633     	BANKSEL	_wakeupFlag
     0043 rrrr                      3-  108 m1      .banksel ram_address
     0044 00rr                      1-  634     	MOVAR	_wakeupFlag
                                    1-  635     	.line	92, "main.c"; 	CLRWDT();
     0045 0002                      1-  636     	clrwdt
                                    1-  637     	.line	93, "main.c"; 	delay(10);
     0046 210A                      1-  638     	MOVIA	0x0a
     0047 00rr                      1-  639     	MOVAR	STK00
     0048 2100                      1-  640     	MOVIA	0x00
                                    1-  641     	MCALL	_delay
     0049 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  642     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  643     ;;unsigned compare: left >= lit (0x29=41), size=2
                                    1-  644     	.line	94, "main.c"; 	if((x>40)&&(!TrunOnDeviceFlag))   //长按按键开机
     004A 2129                      1-  645     	MOVIA	0x29
                                    1-  646     	BANKSEL	r0x104F
     004B rrrr                      3-  108 m1      .banksel ram_address
     004C 04rr                      1-  647     	SUBAR	r0x104F,W
     004D 2100                      1-  648     	MOVIA	0x00
                                    1-  649     	BANKSEL	r0x1050
     004E rrrr                      3-  108 m1      .banksel ram_address
     004F 35rr                      1-  650     	SBCAR	r0x1050,W
     0050 0803                      1-  651     	BTRSS	STATUS,0
                                    1-  652     	MGOTO	_00110_DS_
     0051 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  653     	BANKSEL	_TrunOnDeviceFlag
     0052 rrrr                      3-  108 m1      .banksel ram_address
     0053 01rr                      1-  654     	MOVR	_TrunOnDeviceFlag,W
     0054 0903                      1-  655     	BTRSS	STATUS,2
                                    1-  656     	MGOTO	_00110_DS_
     0055 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  657     	.line	96, "main.c"; 	PORTA |= 0x01;
                                    1-  658     	BANKSEL	_PORTA
     0056 rrrr                      3-  108 m1      .banksel ram_address
     0057 18rr                      1-  659     	BSR	_PORTA,0
                                    1-  660     	.line	97, "main.c"; 	PORTA |= 0x04;
     0058 19rr                      1-  661     	BSR	_PORTA,2
                                    1-  662     	.line	98, "main.c"; 	PORTB &= 0xDF;
     0059 1Err                      1-  663     	BCR	_PORTB,5
                                    1-  664     	.line	99, "main.c"; 	BWUCON = 0;
     005A 02rr                      1-  665     	CLRR	_BWUCON
                                    1-  666     	.line	100, "main.c"; 	OSCCR = C_Normal_Mode|C_FHOSC_Sel;
     005B 2101                      1-  667     	MOVIA	0x01
     005C 00rr                      1-  669     	SFUN	_OSCCR
     005D 0000                      1-  670     	NOP	
                                    1-  671     	.line	101, "main.c"; 	TrunOnDeviceFlag = 1;
     005E 2101                      1-  672     	MOVIA	0x01
                                    1-  673     	BANKSEL	_TrunOnDeviceFlag
     005F rrrr                      3-  108 m1      .banksel ram_address
     0060 00rr                      1-  674     	MOVAR	_TrunOnDeviceFlag
                                    1-  675     	.line	102, "main.c"; 	turnOnFlag = 1;
                                    1-  676     	BANKSEL	_turnOnFlag
     0061 rrrr                      3-  108 m1      .banksel ram_address
     0062 00rr                      1-  677     	MOVAR	_turnOnFlag
                                    1-  678     	.line	103, "main.c"; 	INTFbits.PABIF = 0;
     0063 21FD                      1-  679     	MOVIA	0xfd
     0064 00rr                      1-  680     	MOVAR	(_INTFbits + 0)
                                    1-  681     	.line	104, "main.c"; 	return;
                                    1-  682     	MGOTO	_00124_DS_
     0065 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  683     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  684     ;;unsigned compare: left >= lit (0x29=41), size=2
     0066                           1-  685     _00112_DS_:
                                    1-  686     	.line	107, "main.c"; 	if((x<=40)&&(!turnOnFlag))
     0066 2129                      1-  687     	MOVIA	0x29
                                    1-  688     	BANKSEL	r0x104D
     0067 rrrr                      3-  108 m1      .banksel ram_address
     0068 04rr                      1-  689     	SUBAR	r0x104D,W
     0069 2100                      1-  690     	MOVIA	0x00
                                    1-  691     	BANKSEL	r0x104E
     006A rrrr                      3-  108 m1      .banksel ram_address
     006B 35rr                      1-  692     	SBCAR	r0x104E,W
     006C 0C03                      1-  693     	BTRSC	STATUS,0
                                    1-  694     	MGOTO	_00117_DS_
     006D 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  695     	BANKSEL	_turnOnFlag
     006E rrrr                      3-  108 m1      .banksel ram_address
     006F 01rr                      1-  696     	MOVR	_turnOnFlag,W
     0070 0903                      1-  697     	BTRSS	STATUS,2
                                    1-  698     	MGOTO	_00117_DS_
     0071 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  699     	.line	109, "main.c"; 	sleep_flag = 1;
     0072 2101                      1-  700     	MOVIA	0x01
                                    1-  701     	BANKSEL	_sleep_flag
     0073 rrrr                      3-  108 m1      .banksel ram_address
     0074 00rr                      1-  702     	MOVAR	_sleep_flag
     0075                           1-  703     _00117_DS_:
                                    1-  704     	.line	112, "main.c"; 	if(INTFbits.T0IF)
     0075 08rr                      1-  705     	BTRSS	_INTFbits,0
                                    1-  706     	MGOTO	_00121_DS_
     0076 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  707     	.line	114, "main.c"; 	INTF= (char)~(C_INT_TMR0);			// Clear T0IF flag bit	
     0077 21FE                      1-  708     	MOVIA	0xfe
     0078 00rr                      1-  709     	MOVAR	_INTF
                                    1-  710     	.line	115, "main.c"; 	timer++;
                                    1-  711     	BANKSEL	_timer
     0079 rrrr                      3-  108 m1      .banksel ram_address
     007A 05rr                      1-  712     	INCR	_timer,F
                                    1-  713     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  714     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1-  715     	.line	116, "main.c"; 	if(timer>5)
     007B 2106                      1-  716     	MOVIA	0x06
     007C 04rr                      1-  717     	SUBAR	_timer,W
     007D 0803                      1-  718     	BTRSS	STATUS,0
                                    1-  719     	MGOTO	_00121_DS_
     007E 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  720     	.line	118, "main.c"; 	tick_Event();                              //10 ms 一次。
                                    1-  721     	MCALL	_tick_Event
     007F 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  722     	.line	119, "main.c"; 	key_process();
                                    1-  723     	MCALL	_key_process
     0080 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  724     	.line	120, "main.c"; 	charge_process();
                                    1-  725     	MCALL	_charge_process
     0081 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  726     	.line	121, "main.c"; 	timer = 0;
                                    1-  727     	BANKSEL	_timer
     0082 rrrr                      3-  108 m1      .banksel ram_address
     0083 02rr                      1-  728     	CLRR	_timer
     0084                           1-  729     _00121_DS_:
                                    1-  730     	.line	124, "main.c"; 	if(INTFbits.WDTIF)
     0084 0Brr                      1-  731     	BTRSS	_INTFbits,6
                                    1-  732     	MGOTO	_00124_DS_
     0085 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  733     	.line	126, "main.c"; 	INTF= (char)~(C_INT_WDT);			// Clear WDTIF flag bit		
     0086 21BF                      1-  734     	MOVIA	0xbf
     0087 00rr                      1-  735     	MOVAR	_INTF
     0088                           1-  736     _00124_DS_:
                                    1-  737     	.line	128, "main.c"; 	}
                                    1-  738     	BANKSEL	___sdcc_saved_stk01
     0088 rrrr                      3-  108 m1      .banksel ram_address
     0089 01rr                      1-  739     	MOVR	___sdcc_saved_stk01,W
     008A 00rr                      1-  740     	MOVAR	STK01
                                    1-  741     	BANKSEL	___sdcc_saved_stk00
     008B rrrr                      3-  108 m1      .banksel ram_address
     008C 01rr                      1-  742     	MOVR	___sdcc_saved_stk00,W
     008D 00rr                      1-  743     	MOVAR	STK00
                                    1-  744     	BANKSEL	___sdcc_saved_fsr
     008E rrrr                      3-  108 m1      .banksel ram_address
     008F 01rr                      1-  745     	MOVR	___sdcc_saved_fsr,W
     0090 0084                      1-  746     	MOVAR	FSR
     0091 01rr                      1-  747     	MOVR	PSAVE,W
     0092 008A                      1-  748     	MOVAR	PCHBUF
     0093 0283                      1-  749     	CLRR	STATUS
     0094 15rr                      1-  750     	SWAPR	SSAVE,W
     0095 0083                      1-  751     	MOVAR	STATUS
     0096 15rr                      1-  752     	SWAPR	WSAVE,F
     0097 15rr                      1-  753     	SWAPR	WSAVE,W
     0098                           1-  754     END_OF_INTERRUPT:
     0098 0011                      1-  755     	RETIE	
                                    1-  757     ;--------------------------------------------------------
                                    1-  758     ; code
                                    1-  759     ;--------------------------------------------------------
                                    1-  760     ;***
                                    1-  761     ;  pBlock Stats: dbName = M
                                    1-  762     ;***
                                    1-  763     ;has an exit
                                    1-  764     ;functions called:
                                    1-  765     ;   _tick_Init
                                    1-  766     ;   _volume_initial
                                    1-  767     ;   _digital_initial
                                    1-  768     ;   _v3_mode
                                    1-  769     ;   _delay
                                    1-  770     ;   _stop_buzzer
                                    1-  771     ;   _turnOffDevice
                                    1-  772     ;   _led_task
                                    1-  773     ;   _key_process_task
                                    1-  774     ;   _buzzer_task
                                    1-  775     ;   _charge_check_Task
                                    1-  776     ;   _digital_process_task
                                    1-  777     ;   _tick_Init
                                    1-  778     ;   _volume_initial
                                    1-  779     ;   _digital_initial
                                    1-  780     ;   _v3_mode
                                    1-  781     ;   _delay
                                    1-  782     ;   _stop_buzzer
                                    1-  783     ;   _turnOffDevice
                                    1-  784     ;   _led_task
                                    1-  785     ;   _key_process_task
                                    1-  786     ;   _buzzer_task
                                    1-  787     ;   _charge_check_Task
                                    1-  788     ;   _digital_process_task
                                    1-  789     ;2 compiler assigned registers:
                                    1-  790     ;   r0x1048
                                    1-  791     ;   STK00
                                    1-  792     ;; Starting pCode block
                                    1-  793     .segment "code"; module=main, function=_main
     0000                           1-  795     _main:
                                    1-  796     ; 2 exit points
                                    1-  797     	.line	766, "main.c"; 	IOSTB =  0;								// Set PB to output mode
     0000 0200                      1-  798     	CLRA	
     0001 000r                      1-  799     	IOST	_IOSTB
                                    1-  800     	.line	767, "main.c"; 	PORTB = 0;                           	// PortB Data Register = 0x00
     0002 02rr                      1-  801     	CLRR	_PORTB
                                    1-  802     	.line	769, "main.c"; 	IOSTA = C_PA0_Output;
     0003 0200                      1-  803     	CLRA	
     0004 000r                      1-  804     	IOST	_IOSTA
                                    1-  805     	.line	771, "main.c"; 	ABPLCON &= (char)~(C_PA0_PHB);
                                    1-  806     	BANKSEL	_ABPLCON
     0005 rrrr                      3-  108 m1      .banksel ram_address
     0006 1Crr                      1-  807     	BCR	_ABPLCON,0
                                    1-  808     	.line	772, "main.c"; 	UPDATE_REG(PORTA);	
     0007 01rr                      1-  809     	MOVR	_PORTA,F
                                    1-  810     	.line	773, "main.c"; 	PORTA |= 0x01;
                                    1-  811     	BANKSEL	_PORTA
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 18rr                      1-  812     	BSR	_PORTA,0
                                    1-  813     	.line	775, "main.c"; 	IOSTB &= 0xDF;                       //0 output,1 input
     000A 001r                      1-  814     	IOSTR	_IOSTB
                                    1-  815     	BANKSEL	r0x1048
     000B rrrr                      3-  108 m1      .banksel ram_address
     000C 00rr                      1-  816     	MOVAR	r0x1048
     000D 1Err                      1-  817     	BCR	r0x1048,5
     000E 01rr                      1-  818     	MOVR	r0x1048,W
     000F 000r                      1-  819     	IOST	_IOSTB
                                    1-  820     	.line	776, "main.c"; 	BODCON = C_PB5_OD;
     0010 2120                      1-  821     	MOVIA	0x20
     0011 000r                      1-  822     	IOST	_BODCON
                                    1-  823     	.line	777, "main.c"; 	PORTB |= 0x20;
     0012 1Arr                      1-  824     	BSR	_PORTB,5
                                    1-  825     	.line	779, "main.c"; 	IOSTB  |= 0x40;                         //0 output,1 input 
     0013 001r                      1-  826     	IOSTR	_IOSTB
     0014 00rr                      1-  827     	MOVAR	r0x1048
     0015 1Brr                      1-  828     	BSR	r0x1048,6
     0016 01rr                      1-  829     	MOVR	r0x1048,W
     0017 000r                      1-  830     	IOST	_IOSTB
                                    1-  831     	.line	780, "main.c"; 	BPHCON &= (char)~(C_PB6_PHB);                  //上拉
     0018 1Frr                      1-  832     	BCR	_BPHCON,6
                                    1-  833     	.line	781, "main.c"; 	PORTB  |= 0x40;								// PORTB data buffer=0x00 
     0019 1Brr                      1-  834     	BSR	_PORTB,6
                                    1-  835     	.line	783, "main.c"; 	IOSTB  |= 0x01;                         //0 output,1 input 
     001A 001r                      1-  836     	IOSTR	_IOSTB
     001B 00rr                      1-  837     	MOVAR	r0x1048
     001C 18rr                      1-  838     	BSR	r0x1048,0
     001D 01rr                      1-  839     	MOVR	r0x1048,W
     001E 000r                      1-  840     	IOST	_IOSTB
                                    1-  841     	.line	784, "main.c"; 	BPHCON &= (char)~(C_PB0_PHB);                  //上拉
     001F 1Crr                      1-  842     	BCR	_BPHCON,0
                                    1-  843     	.line	785, "main.c"; 	PORTB  |= 0x01;								// PORTB data buffer=0x00 
     0020 18rr                      1-  844     	BSR	_PORTB,0
                                    1-  845     	.line	787, "main.c"; 	UPDATE_REG(PORTB);	
     0021 01rr                      1-  846     	MOVR	_PORTB,F
                                    1-  847     	.line	789, "main.c"; 	tick_Init();
                                    1-  848     	MCALL	_tick_Init
     0022 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  849     	.line	790, "main.c"; 	volume_initial();
                                    1-  850     	MCALL	_volume_initial
     0023 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  851     	.line	791, "main.c"; 	digital_initial();
                                    1-  852     	MCALL	_digital_initial
     0024 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  853     	.line	792, "main.c"; 	PORTA |= 0x04;                             //开机后，高电平。
                                    1-  854     	BANKSEL	_PORTA
     0025 rrrr                      3-  108 m1      .banksel ram_address
     0026 19rr                      1-  855     	BSR	_PORTA,2
                                    1-  856     	.line	794, "main.c"; 	v3_mode();           //最大档位
                                    1-  857     	MCALL	_v3_mode
     0027 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  858     	.line	795, "main.c"; 	UPDATE_REG(PORTB);	
     0028 01rr                      1-  859     	MOVR	_PORTB,F
                                    1-  860     	.line	798, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     0029 0200                      1-  861     	CLRA	
     002A 000r                      1-  862     	IOST	_PCON1
                                    1-  863     	.line	799, "main.c"; 	TMR0 = 0;								// Load 0x00 to TMR0 (Initial Timer0 register)
     002B 02rr                      1-  864     	CLRR	_TMR0
                                    1-  865     	.line	800, "main.c"; 	T0MD = C_PS0_TMR0 | C_PS0_Div2 ;		// Prescaler0 is assigned to Timer0, Prescaler0 dividing rate = 1:8,clock source is instruction clock
     002C 0200                      1-  866     	CLRA	
     002D 0003                      1-  867     	T0MD	
                                    1-  868     	.line	802, "main.c"; 	INTE |= C_INT_TMR0;
     002E 18rr                      1-  869     	BSR	_INTE,0
                                    1-  870     	.line	806, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     002F 2101                      1-  871     	MOVIA	0x01
     0030 000r                      1-  872     	IOST	_PCON1
                                    1-  873     	.line	808, "main.c"; 	TMRH = 0;								// 
     0031 02rr                      1-  874     	CLRR	_TMRH
                                    1-  875     	.line	809, "main.c"; 	TMR1 = 0x40;//0xFF;							// Move FFH to TMR1 (Initial Timer1 register) 
     0032 2140                      1-  876     	MOVIA	0x40
     0033 00rr                      1-  877     	SFUN	_TMR1
                                    1-  878     	.line	811, "main.c"; 	PWM1DUTY = C_PWM_DUTY_25;				// PWM1 Duty = 64/256 = 25%			
     0034 2110                      1-  879     	MOVIA	0x10
     0035 00rr                      1-  880     	SFUN	_PWM1DUTY
                                    1-  881     	.line	812, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB3 , PWM1 output is active high, reloaded from TMR1, non-stop mode 
     0036 2183                      1-  882     	MOVIA	0x83
     0037 00rr                      1-  883     	SFUN	_T1CR1
                                    1-  884     	.line	813, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0038 0200                      1-  885     	CLRA	
     0039 00rr                      1-  886     	SFUN	_T1CR2
                                    1-  887     	.line	814, "main.c"; 	delay(2);
     003A 2102                      1-  888     	MOVIA	0x02
     003B 00rr                      1-  889     	MOVAR	STK00
     003C 2100                      1-  890     	MOVIA	0x00
                                    1-  891     	MCALL	_delay
     003D 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  892     	.line	815, "main.c"; 	stop_buzzer();	
                                    1-  893     	MCALL	_stop_buzzer
     003E 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  894     	.line	816, "main.c"; 	ENI();	
     003F 0004                      1-  895     	ENI
     0040                           1-  896     _00407_DS_:
                                    1-  897     	.line	819, "main.c"; 	if(sleep_flag)
                                    1-  898     	BANKSEL	_sleep_flag
     0040 rrrr                      3-  108 m1      .banksel ram_address
     0041 01rr                      1-  899     	MOVR	_sleep_flag,W
     0042 0D03                      1-  900     	BTRSC	STATUS,2
                                    1-  901     	MGOTO	_00405_DS_
     0043 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  902     	.line	821, "main.c"; 	sleep_flag = 0;
     0044 02rr                      1-  903     	CLRR	_sleep_flag
                                    1-  904     	.line	822, "main.c"; 	turnOffDevice();
                                    1-  905     	MCALL	_turnOffDevice
     0045 2rrr                      3-   64 m1      LCALL rom_address
     0046                           1-  906     _00405_DS_:
                                    1-  907     	.line	824, "main.c"; 	led_task();
                                    1-  908     	MCALL	_led_task
     0046 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  909     	.line	825, "main.c"; 	key_process_task();
                                    1-  910     	MCALL	_key_process_task
     0047 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  911     	.line	826, "main.c"; 	buzzer_task();
                                    1-  912     	MCALL	_buzzer_task
     0048 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  913     	.line	827, "main.c"; 	charge_check_Task();
                                    1-  914     	MCALL	_charge_check_Task
     0049 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  915     	.line	828, "main.c"; 	digital_process_task();
                                    1-  916     	MCALL	_digital_process_task
     004A 2rrr                      3-   64 m1      LCALL rom_address
                                    1-  917     	.line	829, "main.c"; 	CLRWDT();
     004B 0002                      1-  918     	clrwdt
                                    1-  919     	MGOTO	_00407_DS_
     004C 3rrr                      3-   61 m1      LGOTO rom_address
                                    1-  920     	.line	831, "main.c"; 	}
                                    1-  921     	RETURN	
     004D 0010                      3-   38 m1      ret
                                    1-  922     ; exit point of _main
                                    1-  924     ;***
                                    1-  925     ;  pBlock Stats: dbName = C
                                    1-  926     ;***
                                    1-  927     ;has an exit
                                    1-  928     ;functions called:
                                    1-  929     ;   _key_initial
                                    1-  930     ;   _delay
                                    1-  931     ;   _delay
                                    1-  932     ;   _tick_Init
                                    1-  933     ;   _volume_initial
                                    1-  934     ;   _digital_initial
                                    1-  935     ;   _delay
                                    1-  936     ;   _stop_buzzer
                                    1-  937     ;   _ModeChoode
                                    1-  938     ;   _key_initial
                                    1-  939     ;   _delay
                                    1-  940     ;   _delay
                                    1-  941     ;   _tick_Init
                                    1-  942     ;   _volume_initial
                                    1-  943     ;   _digital_initial
                                    1-  944     ;   _delay
                                    1-  945     ;   _stop_buzzer
                                    1-  946     ;   _ModeChoode
                                    1-  947     ;2 compiler assigned registers:
                                    1-  948     ;   STK00
                                    1-  949     ;   r0x1047
                                    1-  950     ;; Starting pCode block
                                    1-  951     .segment "code"; module=main, function=_turnOffDevice
     0000                           1-  953     _turnOffDevice:
                                    1-  954     ; 2 exit points
                                    1-  955     	.line	691, "main.c"; 	DISI();
     0000 0013                      1-  956     	DISI
                                    1-  957     	.line	692, "main.c"; 	IOSTB =  0;								// Set PB to output mode
     0001 0200                      1-  958     	CLRA	
     0002 000r                      1-  959     	IOST	_IOSTB
                                    1-  960     	.line	693, "main.c"; 	PORTB = 0;                           	// PortB Data Register = 0x00
     0003 02rr                      1-  961     	CLRR	_PORTB
                                    1-  962     	.line	694, "main.c"; 	recordDevice = deviceWorkStatus;               //记录当前设备状态。
                                    1-  963     	BANKSEL	_deviceWorkStatus
     0004 rrrr                      3-  108 m1      .banksel ram_address
     0005 01rr                      1-  964     	MOVR	_deviceWorkStatus,W
                                    1-  965     ;;2	MOVAR	_recordDevice
                                    1-  966     	.line	695, "main.c"; 	turnOnFlag = 0;
                                    1-  967     	BANKSEL	_turnOnFlag
     0006 rrrr                      3-  108 m1      .banksel ram_address
     0007 02rr                      1-  968     	CLRR	_turnOnFlag
                                    1-  969     	.line	696, "main.c"; 	Couter = 0;
                                    1-  970     	BANKSEL	_Couter
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 02rr                      1-  971     	CLRR	_Couter
                                    1-  972     	.line	697, "main.c"; 	TrunOnDeviceFlag = 0;
                                    1-  973     	BANKSEL	_TrunOnDeviceFlag
     000A rrrr                      3-  108 m1      .banksel ram_address
     000B 02rr                      1-  974     	CLRR	_TrunOnDeviceFlag
                                    1-  975     	.line	698, "main.c"; 	charge_remove_status = 0;
                                    1-  976     	BANKSEL	_charge_remove_status
     000C rrrr                      3-  108 m1      .banksel ram_address
     000D 02rr                      1-  977     	CLRR	_charge_remove_status
                                    1-  978     	.line	699, "main.c"; 	charge_plugin_flag = 1;            //重新置1，如同是充电关机
     000E 2101                      1-  979     	MOVIA	0x01
                                    1-  980     	BANKSEL	_charge_plugin_flag
     000F rrrr                      3-  108 m1      .banksel ram_address
     0010 00rr                      1-  981     	MOVAR	_charge_plugin_flag
                                    1-  982     	.line	701, "main.c"; 	IOSTA = 0; 
     0011 0200                      1-  983     	CLRA	
     0012 000r                      1-  984     	IOST	_IOSTA
                                    1-  985     	.line	702, "main.c"; 	PORTA = 0;
                                    1-  986     	BANKSEL	_PORTA
     0013 rrrr                      3-  108 m1      .banksel ram_address
     0014 02rr                      1-  987     	CLRR	_PORTA
                                    1-  988     	.line	703, "main.c"; 	IOSTC = 0; 
     0015 0200                      1-  989     	CLRA	
     0016 000r                      1-  990     	IOST	_IOSTC
                                    1-  991     	.line	704, "main.c"; 	PORTC = 0;
     0017 02rr                      1-  992     	CLRR	_PORTC
                                    1-  993     	.line	705, "main.c"; 	AWUCON = 0;								// Disable PA input change wakeup function
     0018 02rr                      1-  994     	CLRR	_AWUCON
                                    1-  995     	.line	706, "main.c"; 	UPDATE_REG(PORTA);
     0019 01rr                      1-  996     	MOVR	_PORTA,F
                                    1-  997     	.line	707, "main.c"; 	UPDATE_REG(PORTB);
     001A 01rr                      1-  998     	MOVR	_PORTB,F
                                    1-  999     	.line	708, "main.c"; 	PCON &= (char)~(C_WDT_En);
     001B 1Frr                      1- 1000     	BCR	_PCON,7
                                    1- 1001     	.line	709, "main.c"; 	key_initial();
                                    1- 1002     	MCALL	_key_initial
     001C 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1003     	.line	712, "main.c"; 	OSCCR = HALT_MODE;
     001D 2104                      1- 1004     	MOVIA	0x04
     001E 00rr                      1- 1006     	SFUN	_OSCCR
     001F 0000                      1- 1007     	NOP	
                                    1- 1008     	.line	713, "main.c"; 	delay(2);
     0020 2102                      1- 1009     	MOVIA	0x02
     0021 00rr                      1- 1010     	MOVAR	STK00
     0022 2100                      1- 1011     	MOVIA	0x00
                                    1- 1012     	MCALL	_delay
     0023 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1013     	.line	714, "main.c"; 	SLEEP();							// 1. Execute instruction to enters Halt mode (from Normal mode)
     0024 0001                      1- 1014     	sleep
                                    1- 1015     	.line	715, "main.c"; 	delay(2);
     0025 2102                      1- 1016     	MOVIA	0x02
     0026 00rr                      1- 1017     	MOVAR	STK00
     0027 2100                      1- 1018     	MOVIA	0x00
                                    1- 1019     	MCALL	_delay
     0028 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1020     	.line	716, "main.c"; 	IOSTA = C_PA0_Output;
     0029 0200                      1- 1021     	CLRA	
     002A 000r                      1- 1022     	IOST	_IOSTA
                                    1- 1023     	.line	717, "main.c"; 	ABPLCON &= (char)~(C_PA0_PHB);
                                    1- 1024     	BANKSEL	_ABPLCON
     002B rrrr                      3-  108 m1      .banksel ram_address
     002C 1Crr                      1- 1025     	BCR	_ABPLCON,0
                                    1- 1026     	.line	719, "main.c"; 	PORTA &= 0xFE;
                                    1- 1027     	BANKSEL	_PORTA
     002D rrrr                      3-  108 m1      .banksel ram_address
     002E 1Crr                      1- 1028     	BCR	_PORTA,0
                                    1- 1029     	.line	720, "main.c"; 	UPDATE_REG(PORTA);
     002F 01rr                      1- 1030     	MOVR	_PORTA,F
                                    1- 1031     	.line	721, "main.c"; 	PORTB |= 0x20;
     0030 1Arr                      1- 1032     	BSR	_PORTB,5
                                    1- 1033     	.line	722, "main.c"; 	IOSTB &= 0xDF;              //led
     0031 001r                      1- 1034     	IOSTR	_IOSTB
                                    1- 1035     	BANKSEL	r0x1047
     0032 rrrr                      3-  108 m1      .banksel ram_address
     0033 00rr                      1- 1036     	MOVAR	r0x1047
     0034 1Err                      1- 1037     	BCR	r0x1047,5
     0035 01rr                      1- 1038     	MOVR	r0x1047,W
     0036 000r                      1- 1039     	IOST	_IOSTB
                                    1- 1040     	.line	724, "main.c"; 	BPHCON &= (char)~(C_PB5_PHB);
     0037 1Err                      1- 1041     	BCR	_BPHCON,5
                                    1- 1042     	.line	725, "main.c"; 	PORTB |= 0x20;
     0038 1Arr                      1- 1043     	BSR	_PORTB,5
                                    1- 1044     	.line	728, "main.c"; 	IOSTB  |= 0x40;                         //0 output,1 input
     0039 001r                      1- 1045     	IOSTR	_IOSTB
     003A 00rr                      1- 1046     	MOVAR	r0x1047
     003B 1Brr                      1- 1047     	BSR	r0x1047,6
     003C 01rr                      1- 1048     	MOVR	r0x1047,W
     003D 000r                      1- 1049     	IOST	_IOSTB
                                    1- 1050     	.line	729, "main.c"; 	BPHCON &= (char)~(C_PB6_PHB);                  //上拉
     003E 1Frr                      1- 1051     	BCR	_BPHCON,6
                                    1- 1052     	.line	730, "main.c"; 	PORTB  |= 0x40;								// PORTB data buffer=0x00 
     003F 1Brr                      1- 1053     	BSR	_PORTB,6
                                    1- 1054     	.line	732, "main.c"; 	IOSTB  |= 0x01;                         //0 output,1 input
     0040 001r                      1- 1055     	IOSTR	_IOSTB
     0041 00rr                      1- 1056     	MOVAR	r0x1047
     0042 18rr                      1- 1057     	BSR	r0x1047,0
     0043 01rr                      1- 1058     	MOVR	r0x1047,W
     0044 000r                      1- 1059     	IOST	_IOSTB
                                    1- 1060     	.line	733, "main.c"; 	BPHCON &= (char)~(C_PB0_PHB);                  //上拉
     0045 1Crr                      1- 1061     	BCR	_BPHCON,0
                                    1- 1062     	.line	734, "main.c"; 	PORTB  |= 0x01;								// PORTB data buffer=0x00   
     0046 18rr                      1- 1063     	BSR	_PORTB,0
                                    1- 1064     	.line	736, "main.c"; 	tick_Init();
                                    1- 1065     	MCALL	_tick_Init
     0047 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1066     	.line	737, "main.c"; 	volume_initial();
                                    1- 1067     	MCALL	_volume_initial
     0048 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1068     	.line	738, "main.c"; 	digital_initial();
                                    1- 1069     	MCALL	_digital_initial
     0049 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1070     	.line	740, "main.c"; 	UPDATE_REG(PORTB);	
     004A 01rr                      1- 1071     	MOVR	_PORTB,F
                                    1- 1072     	.line	743, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     004B 0200                      1- 1073     	CLRA	
     004C 000r                      1- 1074     	IOST	_PCON1
                                    1- 1075     	.line	744, "main.c"; 	TMR0 = 0;								// Load 0x00 to TMR0 (Initial Timer0 register)
     004D 02rr                      1- 1076     	CLRR	_TMR0
                                    1- 1077     	.line	745, "main.c"; 	T0MD = C_PS0_TMR0 | C_PS0_Div2;		// Prescaler0 is assigned to Timer0, Prescaler0 dividing rate = 1:8,clock source is instruction clock
     004E 0200                      1- 1078     	CLRA	
     004F 0003                      1- 1079     	T0MD	
                                    1- 1080     	.line	747, "main.c"; 	INTE |= C_INT_TMR0;
     0050 18rr                      1- 1081     	BSR	_INTE,0
                                    1- 1082     	.line	752, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0051 2101                      1- 1083     	MOVIA	0x01
     0052 000r                      1- 1084     	IOST	_PCON1
                                    1- 1085     	.line	754, "main.c"; 	TMRH = 0;								// 
     0053 02rr                      1- 1086     	CLRR	_TMRH
                                    1- 1087     	.line	755, "main.c"; 	TMR1 = 0x40;//0xFF;							// Move FFH to TMR1 (Initial Timer1 register) 
     0054 2140                      1- 1088     	MOVIA	0x40
     0055 00rr                      1- 1089     	SFUN	_TMR1
                                    1- 1090     	.line	756, "main.c"; 	PWM1DUTY = C_PWM_DUTY_25;				// PWM1 Duty = 64/256 = 25%			
     0056 2110                      1- 1091     	MOVIA	0x10
     0057 00rr                      1- 1092     	SFUN	_PWM1DUTY
                                    1- 1093     	.line	757, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB3 , PWM1 output is active high, reloaded from TMR1, non-stop mode 
     0058 2183                      1- 1094     	MOVIA	0x83
     0059 00rr                      1- 1095     	SFUN	_T1CR1
                                    1- 1096     	.line	758, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     005A 0200                      1- 1097     	CLRA	
     005B 00rr                      1- 1098     	SFUN	_T1CR2
                                    1- 1099     	.line	759, "main.c"; 	delay(2);
     005C 2102                      1- 1100     	MOVIA	0x02
     005D 00rr                      1- 1101     	MOVAR	STK00
     005E 2100                      1- 1102     	MOVIA	0x00
                                    1- 1103     	MCALL	_delay
     005F 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1104     	.line	760, "main.c"; 	stop_buzzer();	
                                    1- 1105     	MCALL	_stop_buzzer
     0060 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1106     	.line	761, "main.c"; 	ENI();	
     0061 0004                      1- 1107     	ENI
                                    1- 1108     	.line	762, "main.c"; 	ModeChoode();
                                    1- 1109     	MCALL	_ModeChoode
     0062 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1110     	.line	763, "main.c"; 	}
                                    1- 1111     	RETURN	
     0063 0010                      3-   38 m1      ret
                                    1- 1112     ; exit point of _turnOffDevice
                                    1- 1114     ;***
                                    1- 1115     ;  pBlock Stats: dbName = C
                                    1- 1116     ;***
                                    1- 1117     ;functions called:
                                    1- 1118     ;   _v0_mode
                                    1- 1119     ;   _v1_mode
                                    1- 1120     ;   _v2_mode
                                    1- 1121     ;   _v3_mode
                                    1- 1122     ;   _v0_mode
                                    1- 1123     ;   _v1_mode
                                    1- 1124     ;   _v2_mode
                                    1- 1125     ;   _v3_mode
                                    1- 1126     ;; Starting pCode block
                                    1- 1127     .segment "code"; module=main, function=_ModeChoode
     0000                           1- 1129     _ModeChoode:
                                    1- 1130     ; 0 exit points
                                    1- 1131     	.line	669, "main.c"; 	if(deviceWorkStatus == V0_STATE)
                                    1- 1132     	BANKSEL	_deviceWorkStatus
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 01rr                      1- 1133     	MOVR	_deviceWorkStatus,W
     0002 2401                      1- 1134     	XORIA	0x01
     0003 0903                      1- 1135     	BTRSS	STATUS,2
                                    1- 1136     	MGOTO	_00393_DS_
     0004 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1137     	.line	671, "main.c"; 	v0_mode();
                                    1- 1138     	MCALL	_v0_mode
     0005 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1139     	MGOTO	_00395_DS_
     0006 3rrr                      3-   61 m1      LGOTO rom_address
     0007                           1- 1140     _00393_DS_:
                                    1- 1141     	.line	673, "main.c"; 	else if(deviceWorkStatus == V1_STATE)
                                    1- 1142     	BANKSEL	_deviceWorkStatus
     0007 rrrr                      3-  108 m1      .banksel ram_address
     0008 01rr                      1- 1143     	MOVR	_deviceWorkStatus,W
     0009 2402                      1- 1144     	XORIA	0x02
     000A 0903                      1- 1145     	BTRSS	STATUS,2
                                    1- 1146     	MGOTO	_00390_DS_
     000B 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1147     	.line	676, "main.c"; 	v1_mode();
                                    1- 1148     	MCALL	_v1_mode
     000C 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1149     	MGOTO	_00395_DS_
     000D 3rrr                      3-   61 m1      LGOTO rom_address
     000E                           1- 1150     _00390_DS_:
                                    1- 1151     	.line	678, "main.c"; 	else if(deviceWorkStatus == V2_STATE)
                                    1- 1152     	BANKSEL	_deviceWorkStatus
     000E rrrr                      3-  108 m1      .banksel ram_address
     000F 01rr                      1- 1153     	MOVR	_deviceWorkStatus,W
     0010 2403                      1- 1154     	XORIA	0x03
     0011 0903                      1- 1155     	BTRSS	STATUS,2
                                    1- 1156     	MGOTO	_00387_DS_
     0012 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1157     	.line	681, "main.c"; 	v2_mode();
                                    1- 1158     	MCALL	_v2_mode
     0013 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1159     	MGOTO	_00395_DS_
     0014 3rrr                      3-   61 m1      LGOTO rom_address
     0015                           1- 1160     _00387_DS_:
                                    1- 1161     	.line	683, "main.c"; 	else if(deviceWorkStatus == V3_STATE)
                                    1- 1162     	BANKSEL	_deviceWorkStatus
     0015 rrrr                      3-  108 m1      .banksel ram_address
     0016 01rr                      1- 1163     	MOVR	_deviceWorkStatus,W
     0017 2404                      1- 1164     	XORIA	0x04
     0018 0D03                      1- 1165     	BTRSC	STATUS,2
                                    1- 1166     	.line	686, "main.c"; 	v3_mode();
                                    1- 1167     	MCALL	_v3_mode
     0019 2rrr                      3-   64 m1      LCALL rom_address
     001A                           1- 1168     _00395_DS_:
                                    1- 1169     	.line	688, "main.c"; 	}
                                    1- 1170     	RETURN	
     001A 0010                      3-   38 m1      ret
                                    1- 1172     ;***
                                    1- 1173     ;  pBlock Stats: dbName = C
                                    1- 1174     ;***
                                    1- 1175     ;has an exit
                                    1- 1176     ;6 compiler assigned registers:
                                    1- 1177     ;   r0x1042
                                    1- 1178     ;   STK00
                                    1- 1179     ;   r0x1043
                                    1- 1180     ;   r0x1044
                                    1- 1181     ;   r0x1045
                                    1- 1182     ;   r0x1046
                                    1- 1183     ;; Starting pCode block
                                    1- 1184     .segment "code"; module=main, function=_delay
                                    1- 1186     ;local variable name mapping:
     0000                           1- 1191     _delay:
                                    1- 1192     ; 2 exit points
                                    1- 1193     	.line	661, "main.c"; 	void delay(int count)
                                    1- 1194     	BANKSEL	r0x1042
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 00rr                      1- 1195     	MOVAR	r0x1042
     0002 01rr                      1- 1196     	MOVR	STK00,W
                                    1- 1197     	BANKSEL	r0x1043
     0003 rrrr                      3-  108 m1      .banksel ram_address
     0004 00rr                      1- 1198     	MOVAR	r0x1043
                                    1- 1199     	.line	664, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1200     	MOVIA	0x01
                                    1- 1201     	BANKSEL	r0x1044
     0006 rrrr                      3-  108 m1      .banksel ram_address
     0007 00rr                      1- 1202     	MOVAR	r0x1044
                                    1- 1203     	BANKSEL	r0x1045
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 02rr                      1- 1204     	CLRR	r0x1045
     000A                           1- 1205     _00368_DS_:
                                    1- 1206     	BANKSEL	r0x1042
     000A rrrr                      3-  108 m1      .banksel ram_address
     000B 01rr                      1- 1207     	MOVR	r0x1042,W
     000C 2580                      1- 1208     	ADDIA	0x80
                                    1- 1209     	BANKSEL	r0x1046
     000D rrrr                      3-  108 m1      .banksel ram_address
     000E 00rr                      1- 1210     	MOVAR	r0x1046
                                    1- 1211     	BANKSEL	r0x1045
     000F rrrr                      3-  108 m1      .banksel ram_address
     0010 01rr                      1- 1212     	MOVR	r0x1045,W
     0011 2580                      1- 1213     	ADDIA	0x80
                                    1- 1214     	BANKSEL	r0x1046
     0012 rrrr                      3-  108 m1      .banksel ram_address
     0013 04rr                      1- 1215     	SUBAR	r0x1046,W
     0014 0903                      1- 1216     	BTRSS	STATUS,2
                                    1- 1217     	MGOTO	_00379_DS_
     0015 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1218     	BANKSEL	r0x1044
     0016 rrrr                      3-  108 m1      .banksel ram_address
     0017 01rr                      1- 1219     	MOVR	r0x1044,W
                                    1- 1220     	BANKSEL	r0x1043
     0018 rrrr                      3-  108 m1      .banksel ram_address
     0019 04rr                      1- 1221     	SUBAR	r0x1043,W
     001A                           1- 1222     _00379_DS_:
     001A 0803                      1- 1223     	BTRSS	STATUS,0
                                    1- 1224     	MGOTO	_00370_DS_
     001B 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1225     	BANKSEL	r0x1044
     001C rrrr                      3-  108 m1      .banksel ram_address
     001D 05rr                      1- 1226     	INCR	r0x1044,F
     001E 0903                      1- 1227     	BTRSS	STATUS,2
                                    1- 1228     	MGOTO	_00001_DS_
     001F 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1229     	BANKSEL	r0x1045
     0020 rrrr                      3-  108 m1      .banksel ram_address
     0021 05rr                      1- 1230     	INCR	r0x1045,F
     0022                           1- 1231     _00001_DS_:
                                    1- 1232     	MGOTO	_00368_DS_
     0022 3rrr                      3-   61 m1      LGOTO rom_address
     0023                           1- 1233     _00370_DS_:
                                    1- 1234     	.line	666, "main.c"; 	}
                                    1- 1235     	RETURN	
     0023 0010                      3-   38 m1      ret
                                    1- 1236     ; exit point of _delay
                                    1- 1238     ;***
                                    1- 1239     ;  pBlock Stats: dbName = C
                                    1- 1240     ;***
                                    1- 1241     ;has an exit
                                    1- 1242     ;functions called:
                                    1- 1243     ;   _tick_GetTickCount
                                    1- 1244     ;   _tick_GetElapsedTime
                                    1- 1245     ;   _tick_GetTickCount
                                    1- 1246     ;   _tick_GetElapsedTime
                                    1- 1247     ;1 compiler assigned register :
                                    1- 1248     ;   r0x1042
                                    1- 1249     ;; Starting pCode block
                                    1- 1250     .segment "code"; module=main, function=_charge_check_Task
                                    1- 1252     ;local variable name mapping:
     0000                           1- 1254     _charge_check_Task:
                                    1- 1255     ; 2 exit points
                                    1- 1256     	.line	638, "main.c"; 	if((charge_remove_status)&&(!turnOnFlag))               //电池移除非手动开机
                                    1- 1257     	BANKSEL	_charge_remove_status
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 01rr                      1- 1258     	MOVR	_charge_remove_status,W
     0002 0D03                      1- 1259     	BTRSC	STATUS,2
                                    1- 1260     	MGOTO	_00361_DS_
     0003 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1261     	BANKSEL	_turnOnFlag
     0004 rrrr                      3-  108 m1      .banksel ram_address
     0005 01rr                      1- 1262     	MOVR	_turnOnFlag,W
     0006 0903                      1- 1263     	BTRSS	STATUS,2
                                    1- 1264     	MGOTO	_00361_DS_
     0007 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1265     	.line	640, "main.c"; 	if (Waiter8sTimer == 0)
                                    1- 1266     	BANKSEL	_charge_check_Task_Waiter8sTimer_65536_127
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 01rr                      1- 1267     	MOVR	_charge_check_Task_Waiter8sTimer_65536_127,W
     000A 11rr                      1- 1268     	IORAR	(_charge_check_Task_Waiter8sTimer_65536_127 + 1),W
     000B 11rr                      1- 1269     	IORAR	(_charge_check_Task_Waiter8sTimer_65536_127 + 2),W
     000C 11rr                      1- 1270     	IORAR	(_charge_check_Task_Waiter8sTimer_65536_127 + 3),W
     000D 0903                      1- 1271     	BTRSS	STATUS,2
                                    1- 1272     	MGOTO	_00353_DS_
     000E 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1273     	.line	642, "main.c"; 	Waiter8sTimer = tick_GetTickCount();
                                    1- 1274     	MCALL	_tick_GetTickCount
     000F 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1275     	BANKSEL	r0x1042
     0010 rrrr                      3-  108 m1      .banksel ram_address
     0011 00rr                      1- 1276     	MOVAR	r0x1042
                                    1- 1277     	BANKSEL	_charge_check_Task_Waiter8sTimer_65536_127
     0012 rrrr                      3-  108 m1      .banksel ram_address
     0013 00rr                      1- 1278     	MOVAR	_charge_check_Task_Waiter8sTimer_65536_127
     0014 02rr                      1- 1279     	CLRR	(_charge_check_Task_Waiter8sTimer_65536_127 + 1)
     0015 02rr                      1- 1280     	CLRR	(_charge_check_Task_Waiter8sTimer_65536_127 + 2)
     0016 02rr                      1- 1281     	CLRR	(_charge_check_Task_Waiter8sTimer_65536_127 + 3)
     0017                           1- 1282     _00353_DS_:
                                    1- 1283     	.line	644, "main.c"; 	if (tick_GetElapsedTime(Waiter8sTimer) >= TURNON_TIMEOUT)
                                    1- 1284     	BANKSEL	_charge_check_Task_Waiter8sTimer_65536_127
     0017 rrrr                      3-  108 m1      .banksel ram_address
     0018 01rr                      1- 1285     	MOVR	_charge_check_Task_Waiter8sTimer_65536_127,W
                                    1- 1286     	BANKSEL	r0x1042
     0019 rrrr                      3-  108 m1      .banksel ram_address
     001A 00rr                      1- 1287     	MOVAR	r0x1042
                                    1- 1288     	MCALL	_tick_GetElapsedTime
     001B 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1289     	BANKSEL	r0x1042
     001C rrrr                      3-  108 m1      .banksel ram_address
     001D 00rr                      1- 1290     	MOVAR	r0x1042
                                    1- 1291     ;;unsigned compare: left < lit (0xAF=175), size=1
     001E 21AF                      1- 1292     	MOVIA	0xaf
     001F 04rr                      1- 1293     	SUBAR	r0x1042,W
     0020 0803                      1- 1294     	BTRSS	STATUS,0
                                    1- 1295     	MGOTO	_00361_DS_
     0021 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1296     	.line	646, "main.c"; 	Waiter8sTimer = 0;
                                    1- 1297     	BANKSEL	_charge_check_Task_Waiter8sTimer_65536_127
     0022 rrrr                      3-  108 m1      .banksel ram_address
     0023 02rr                      1- 1298     	CLRR	_charge_check_Task_Waiter8sTimer_65536_127
     0024 02rr                      1- 1299     	CLRR	(_charge_check_Task_Waiter8sTimer_65536_127 + 1)
     0025 02rr                      1- 1300     	CLRR	(_charge_check_Task_Waiter8sTimer_65536_127 + 2)
     0026 02rr                      1- 1301     	CLRR	(_charge_check_Task_Waiter8sTimer_65536_127 + 3)
                                    1- 1302     	.line	647, "main.c"; 	Couter++;
                                    1- 1303     	BANKSEL	_Couter
     0027 rrrr                      3-  108 m1      .banksel ram_address
     0028 05rr                      1- 1304     	INCR	_Couter,F
                                    1- 1305     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1- 1306     	.line	648, "main.c"; 	if(Couter>=2)
     0029 2102                      1- 1307     	MOVIA	0x02
     002A 04rr                      1- 1308     	SUBAR	_Couter,W
     002B 0803                      1- 1309     	BTRSS	STATUS,0
                                    1- 1310     	MGOTO	_00361_DS_
     002C 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1311     	.line	650, "main.c"; 	Couter = 0;
     002D 02rr                      1- 1312     	CLRR	_Couter
                                    1- 1313     	.line	651, "main.c"; 	charge_remove_status = 0;
                                    1- 1314     	BANKSEL	_charge_remove_status
     002E rrrr                      3-  108 m1      .banksel ram_address
     002F 02rr                      1- 1315     	CLRR	_charge_remove_status
                                    1- 1316     	.line	652, "main.c"; 	PORTA |= 0x01;       //PA0
                                    1- 1317     	BANKSEL	_PORTA
     0030 rrrr                      3-  108 m1      .banksel ram_address
     0031 18rr                      1- 1318     	BSR	_PORTA,0
                                    1- 1319     	.line	653, "main.c"; 	PORTA |= 0x04;       //PA2
     0032 19rr                      1- 1320     	BSR	_PORTA,2
                                    1- 1321     	.line	654, "main.c"; 	PORTB &= 0xDF;       //PB5 = 0
     0033 1Err                      1- 1322     	BCR	_PORTB,5
                                    1- 1323     	.line	655, "main.c"; 	TrunOnDeviceFlag = 1;
     0034 2101                      1- 1324     	MOVIA	0x01
                                    1- 1325     	BANKSEL	_TrunOnDeviceFlag
     0035 rrrr                      3-  108 m1      .banksel ram_address
     0036 00rr                      1- 1326     	MOVAR	_TrunOnDeviceFlag
     0037                           1- 1327     _00361_DS_:
                                    1- 1328     	.line	660, "main.c"; 	}
                                    1- 1329     	RETURN	
     0037 0010                      3-   38 m1      ret
                                    1- 1330     ; exit point of _charge_check_Task
                                    1- 1332     ;***
                                    1- 1333     ;  pBlock Stats: dbName = C
                                    1- 1334     ;***
                                    1- 1335     ;has an exit
                                    1- 1336     ;1 compiler assigned register :
                                    1- 1337     ;   r0x1049
                                    1- 1338     ;; Starting pCode block
                                    1- 1339     .segment "code"; module=main, function=_charge_process
     0000                           1- 1341     _charge_process:
                                    1- 1342     ; 2 exit points
                                    1- 1343     	.line	598, "main.c"; 	charge_detect = (~PORTB)&0x01;              //获取PB0电平状态
     0000 07rr                      1- 1344     	COMR	_PORTB,W
                                    1- 1345     	BANKSEL	r0x1049
     0001 rrrr                      3-  108 m1      .banksel ram_address
     0002 00rr                      1- 1346     	MOVAR	r0x1049
     0003 08rr                      1- 1347     	BTRSS	r0x1049,0
                                    1- 1348     	MGOTO	_00345_DS_
     0004 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1349     	.line	601, "main.c"; 	charge_remove_timer = 0;           //清空充电器移开计时器
                                    1- 1350     	BANKSEL	_charge_remove_timer
     0005 rrrr                      3-  108 m1      .banksel ram_address
     0006 02rr                      1- 1351     	CLRR	_charge_remove_timer
                                    1- 1352     	.line	604, "main.c"; 	charge_plugin_flag = 1;
     0007 2101                      1- 1353     	MOVIA	0x01
                                    1- 1354     	BANKSEL	_charge_plugin_flag
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 00rr                      1- 1355     	MOVAR	_charge_plugin_flag
                                    1- 1356     	.line	605, "main.c"; 	charge_remove_flag = 0;
                                    1- 1357     	BANKSEL	_charge_remove_flag
     000A rrrr                      3-  108 m1      .banksel ram_address
     000B 02rr                      1- 1358     	CLRR	_charge_remove_flag
                                    1- 1359     	.line	606, "main.c"; 	charge_on_status = 1;
     000C 2101                      1- 1360     	MOVIA	0x01
                                    1- 1361     	BANKSEL	_charge_on_status
     000D rrrr                      3-  108 m1      .banksel ram_address
     000E 00rr                      1- 1362     	MOVAR	_charge_on_status
                                    1- 1363     	.line	608, "main.c"; 	PORTA &= 0xFE;      //PA0 = 0;
                                    1- 1364     	BANKSEL	_PORTA
     000F rrrr                      3-  108 m1      .banksel ram_address
     0010 1Crr                      1- 1365     	BCR	_PORTA,0
                                    1- 1366     	.line	609, "main.c"; 	PORTB |= 0x20;      //PB5 = 1;
     0011 1Arr                      1- 1367     	BSR	_PORTB,5
                                    1- 1368     	.line	610, "main.c"; 	sleep_flag = 1;
     0012 2101                      1- 1369     	MOVIA	0x01
                                    1- 1370     	BANKSEL	_sleep_flag
     0013 rrrr                      3-  108 m1      .banksel ram_address
     0014 00rr                      1- 1371     	MOVAR	_sleep_flag
                                    1- 1372     	MGOTO	_00347_DS_
     0015 3rrr                      3-   61 m1      LGOTO rom_address
     0016                           1- 1373     _00345_DS_:
                                    1- 1374     	.line	618, "main.c"; 	charge_plugin_timer = 0;
                                    1- 1375     	BANKSEL	_charge_plugin_timer
     0016 rrrr                      3-  108 m1      .banksel ram_address
     0017 02rr                      1- 1376     	CLRR	_charge_plugin_timer
                                    1- 1377     	.line	620, "main.c"; 	if(charge_plugin_flag)
                                    1- 1378     	BANKSEL	_charge_plugin_flag
     0018 rrrr                      3-  108 m1      .banksel ram_address
     0019 01rr                      1- 1379     	MOVR	_charge_plugin_flag,W
     001A 0D03                      1- 1380     	BTRSC	STATUS,2
                                    1- 1381     	MGOTO	_00347_DS_
     001B 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1382     	.line	622, "main.c"; 	charge_remove_flag = 1;
     001C 2101                      1- 1383     	MOVIA	0x01
                                    1- 1384     	BANKSEL	_charge_remove_flag
     001D rrrr                      3-  108 m1      .banksel ram_address
     001E 00rr                      1- 1385     	MOVAR	_charge_remove_flag
                                    1- 1386     	.line	623, "main.c"; 	charge_plugin_flag = 0;
                                    1- 1387     	BANKSEL	_charge_plugin_flag
     001F rrrr                      3-  108 m1      .banksel ram_address
     0020 02rr                      1- 1388     	CLRR	_charge_plugin_flag
                                    1- 1389     	.line	624, "main.c"; 	charge_remove_status = 1;
     0021 2101                      1- 1390     	MOVIA	0x01
                                    1- 1391     	BANKSEL	_charge_remove_status
     0022 rrrr                      3-  108 m1      .banksel ram_address
     0023 00rr                      1- 1392     	MOVAR	_charge_remove_status
                                    1- 1393     	.line	627, "main.c"; 	BWUCON = 0;
     0024 02rr                      1- 1394     	CLRR	_BWUCON
                                    1- 1395     	.line	628, "main.c"; 	OSCCR = C_Normal_Mode|C_FHOSC_Sel;
     0025 2101                      1- 1396     	MOVIA	0x01
     0026 00rr                      1- 1398     	SFUN	_OSCCR
     0027 0000                      1- 1399     	NOP	
     0028                           1- 1400     _00347_DS_:
                                    1- 1401     	.line	632, "main.c"; 	}
                                    1- 1402     	RETURN	
     0028 0010                      3-   38 m1      ret
                                    1- 1403     ; exit point of _charge_process
                                    1- 1405     ;***
                                    1- 1406     ;  pBlock Stats: dbName = C
                                    1- 1407     ;***
                                    1- 1408     ;has an exit
                                    1- 1409     ;functions called:
                                    1- 1410     ;   _tick_GetTickCount
                                    1- 1411     ;   _tick_GetElapsedTime
                                    1- 1412     ;   _tick_GetTickCount
                                    1- 1413     ;   _tick_GetElapsedTime
                                    1- 1414     ;   _tick_GetTickCount
                                    1- 1415     ;   _tick_GetElapsedTime
                                    1- 1416     ;   _tick_GetTickCount
                                    1- 1417     ;   _tick_GetElapsedTime
                                    1- 1418     ;1 compiler assigned register :
                                    1- 1419     ;   r0x1042
                                    1- 1420     ;; Starting pCode block
                                    1- 1421     .segment "code"; module=main, function=_led_task
                                    1- 1423     ;local variable name mapping:
     0000                           1- 1426     _led_task:
                                    1- 1427     ; 2 exit points
                                    1- 1428     	.line	563, "main.c"; 	if(TrunOnDeviceFlag == 1)
                                    1- 1429     	BANKSEL	_TrunOnDeviceFlag
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 01rr                      1- 1430     	MOVR	_TrunOnDeviceFlag,W
     0002 2401                      1- 1431     	XORIA	0x01
     0003 0903                      1- 1432     	BTRSS	STATUS,2
                                    1- 1433     	MGOTO	_00330_DS_
     0004 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1434     	.line	565, "main.c"; 	if (TrunOnDeviceTimer == 0)
                                    1- 1435     	BANKSEL	_led_task_TrunOnDeviceTimer_65536_114
     0005 rrrr                      3-  108 m1      .banksel ram_address
     0006 01rr                      1- 1436     	MOVR	_led_task_TrunOnDeviceTimer_65536_114,W
     0007 11rr                      1- 1437     	IORAR	(_led_task_TrunOnDeviceTimer_65536_114 + 1),W
     0008 11rr                      1- 1438     	IORAR	(_led_task_TrunOnDeviceTimer_65536_114 + 2),W
     0009 11rr                      1- 1439     	IORAR	(_led_task_TrunOnDeviceTimer_65536_114 + 3),W
     000A 0903                      1- 1440     	BTRSS	STATUS,2
                                    1- 1441     	MGOTO	_00326_DS_
     000B 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1442     	.line	567, "main.c"; 	PORTB &= 0xDF;
     000C 1Err                      1- 1443     	BCR	_PORTB,5
                                    1- 1444     	.line	568, "main.c"; 	TrunOnDeviceTimer = tick_GetTickCount();
                                    1- 1445     	MCALL	_tick_GetTickCount
     000D 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1446     	BANKSEL	r0x1042
     000E rrrr                      3-  108 m1      .banksel ram_address
     000F 00rr                      1- 1447     	MOVAR	r0x1042
                                    1- 1448     	BANKSEL	_led_task_TrunOnDeviceTimer_65536_114
     0010 rrrr                      3-  108 m1      .banksel ram_address
     0011 00rr                      1- 1449     	MOVAR	_led_task_TrunOnDeviceTimer_65536_114
     0012 02rr                      1- 1450     	CLRR	(_led_task_TrunOnDeviceTimer_65536_114 + 1)
     0013 02rr                      1- 1451     	CLRR	(_led_task_TrunOnDeviceTimer_65536_114 + 2)
     0014 02rr                      1- 1452     	CLRR	(_led_task_TrunOnDeviceTimer_65536_114 + 3)
     0015                           1- 1453     _00326_DS_:
                                    1- 1454     	.line	570, "main.c"; 	if (tick_GetElapsedTime(TrunOnDeviceTimer) >= LED_TURNON_TIMEOUT)
                                    1- 1455     	BANKSEL	_led_task_TrunOnDeviceTimer_65536_114
     0015 rrrr                      3-  108 m1      .banksel ram_address
     0016 01rr                      1- 1456     	MOVR	_led_task_TrunOnDeviceTimer_65536_114,W
                                    1- 1457     	BANKSEL	r0x1042
     0017 rrrr                      3-  108 m1      .banksel ram_address
     0018 00rr                      1- 1458     	MOVAR	r0x1042
                                    1- 1459     	MCALL	_tick_GetElapsedTime
     0019 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1460     	BANKSEL	r0x1042
     001A rrrr                      3-  108 m1      .banksel ram_address
     001B 00rr                      1- 1461     	MOVAR	r0x1042
                                    1- 1462     ;;unsigned compare: left < lit (0xC8=200), size=1
     001C 21C8                      1- 1463     	MOVIA	0xc8
     001D 04rr                      1- 1464     	SUBAR	r0x1042,W
     001E 0803                      1- 1465     	BTRSS	STATUS,0
                                    1- 1466     	MGOTO	_00330_DS_
     001F 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1467     	.line	572, "main.c"; 	TrunOnDeviceTimer = 0;
                                    1- 1468     	BANKSEL	_led_task_TrunOnDeviceTimer_65536_114
     0020 rrrr                      3-  108 m1      .banksel ram_address
     0021 02rr                      1- 1469     	CLRR	_led_task_TrunOnDeviceTimer_65536_114
     0022 02rr                      1- 1470     	CLRR	(_led_task_TrunOnDeviceTimer_65536_114 + 1)
     0023 02rr                      1- 1471     	CLRR	(_led_task_TrunOnDeviceTimer_65536_114 + 2)
     0024 02rr                      1- 1472     	CLRR	(_led_task_TrunOnDeviceTimer_65536_114 + 3)
                                    1- 1473     	.line	573, "main.c"; 	TrunOnDeviceFlag = 0;
                                    1- 1474     	BANKSEL	_TrunOnDeviceFlag
     0025 rrrr                      3-  108 m1      .banksel ram_address
     0026 02rr                      1- 1475     	CLRR	_TrunOnDeviceFlag
                                    1- 1476     	.line	574, "main.c"; 	PORTB |= 0x20;
     0027 1Arr                      1- 1477     	BSR	_PORTB,5
                                    1- 1478     	.line	575, "main.c"; 	turnOnOffBuzzer = 1;                             //启动开机蜂鸣器
     0028 2101                      1- 1479     	MOVIA	0x01
                                    1- 1480     	BANKSEL	_turnOnOffBuzzer
     0029 rrrr                      3-  108 m1      .banksel ram_address
     002A 00rr                      1- 1481     	MOVAR	_turnOnOffBuzzer
     002B                           1- 1482     _00330_DS_:
                                    1- 1483     	.line	578, "main.c"; 	if(TrunOffDeviceFlag == 1)
                                    1- 1484     	BANKSEL	_TrunOffDeviceFlag
     002B rrrr                      3-  108 m1      .banksel ram_address
     002C 01rr                      1- 1485     	MOVR	_TrunOffDeviceFlag,W
     002D 2401                      1- 1486     	XORIA	0x01
     002E 0903                      1- 1487     	BTRSS	STATUS,2
                                    1- 1488     	MGOTO	_00337_DS_
     002F 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1489     	.line	580, "main.c"; 	if (TrunOffDeviceTimer == 0)
                                    1- 1490     	BANKSEL	_led_task_TrunOffDeviceTimer_65536_114
     0030 rrrr                      3-  108 m1      .banksel ram_address
     0031 01rr                      1- 1491     	MOVR	_led_task_TrunOffDeviceTimer_65536_114,W
     0032 11rr                      1- 1492     	IORAR	(_led_task_TrunOffDeviceTimer_65536_114 + 1),W
     0033 11rr                      1- 1493     	IORAR	(_led_task_TrunOffDeviceTimer_65536_114 + 2),W
     0034 11rr                      1- 1494     	IORAR	(_led_task_TrunOffDeviceTimer_65536_114 + 3),W
     0035 0903                      1- 1495     	BTRSS	STATUS,2
                                    1- 1496     	MGOTO	_00332_DS_
     0036 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1497     	.line	582, "main.c"; 	PORTB &= 0xDF;
     0037 1Err                      1- 1498     	BCR	_PORTB,5
                                    1- 1499     	.line	583, "main.c"; 	TrunOffDeviceTimer = tick_GetTickCount();
                                    1- 1500     	MCALL	_tick_GetTickCount
     0038 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1501     	BANKSEL	r0x1042
     0039 rrrr                      3-  108 m1      .banksel ram_address
     003A 00rr                      1- 1502     	MOVAR	r0x1042
                                    1- 1503     	BANKSEL	_led_task_TrunOffDeviceTimer_65536_114
     003B rrrr                      3-  108 m1      .banksel ram_address
     003C 00rr                      1- 1504     	MOVAR	_led_task_TrunOffDeviceTimer_65536_114
     003D 02rr                      1- 1505     	CLRR	(_led_task_TrunOffDeviceTimer_65536_114 + 1)
     003E 02rr                      1- 1506     	CLRR	(_led_task_TrunOffDeviceTimer_65536_114 + 2)
     003F 02rr                      1- 1507     	CLRR	(_led_task_TrunOffDeviceTimer_65536_114 + 3)
     0040                           1- 1508     _00332_DS_:
                                    1- 1509     	.line	585, "main.c"; 	if (tick_GetElapsedTime(TrunOffDeviceTimer) >= LED_TURNOFF_TIMEOUT)
                                    1- 1510     	BANKSEL	_led_task_TrunOffDeviceTimer_65536_114
     0040 rrrr                      3-  108 m1      .banksel ram_address
     0041 01rr                      1- 1511     	MOVR	_led_task_TrunOffDeviceTimer_65536_114,W
                                    1- 1512     	BANKSEL	r0x1042
     0042 rrrr                      3-  108 m1      .banksel ram_address
     0043 00rr                      1- 1513     	MOVAR	r0x1042
                                    1- 1514     	MCALL	_tick_GetElapsedTime
     0044 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1515     	BANKSEL	r0x1042
     0045 rrrr                      3-  108 m1      .banksel ram_address
     0046 00rr                      1- 1516     	MOVAR	r0x1042
                                    1- 1517     ;;unsigned compare: left < lit (0xC8=200), size=1
     0047 21C8                      1- 1518     	MOVIA	0xc8
     0048 04rr                      1- 1519     	SUBAR	r0x1042,W
     0049 0803                      1- 1520     	BTRSS	STATUS,0
                                    1- 1521     	MGOTO	_00337_DS_
     004A 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1522     	.line	587, "main.c"; 	TrunOffDeviceTimer = 0;
                                    1- 1523     	BANKSEL	_led_task_TrunOffDeviceTimer_65536_114
     004B rrrr                      3-  108 m1      .banksel ram_address
     004C 02rr                      1- 1524     	CLRR	_led_task_TrunOffDeviceTimer_65536_114
     004D 02rr                      1- 1525     	CLRR	(_led_task_TrunOffDeviceTimer_65536_114 + 1)
     004E 02rr                      1- 1526     	CLRR	(_led_task_TrunOffDeviceTimer_65536_114 + 2)
     004F 02rr                      1- 1527     	CLRR	(_led_task_TrunOffDeviceTimer_65536_114 + 3)
                                    1- 1528     	.line	588, "main.c"; 	TrunOffDeviceFlag = 0;
                                    1- 1529     	BANKSEL	_TrunOffDeviceFlag
     0050 rrrr                      3-  108 m1      .banksel ram_address
     0051 02rr                      1- 1530     	CLRR	_TrunOffDeviceFlag
                                    1- 1531     	.line	589, "main.c"; 	PORTB |= 0x20;
     0052 1Arr                      1- 1532     	BSR	_PORTB,5
                                    1- 1533     	.line	591, "main.c"; 	sleep_flag = 1;
     0053 2101                      1- 1534     	MOVIA	0x01
                                    1- 1535     	BANKSEL	_sleep_flag
     0054 rrrr                      3-  108 m1      .banksel ram_address
     0055 00rr                      1- 1536     	MOVAR	_sleep_flag
     0056                           1- 1537     _00337_DS_:
                                    1- 1538     	.line	594, "main.c"; 	}
                                    1- 1539     	RETURN	
     0056 0010                      3-   38 m1      ret
                                    1- 1540     ; exit point of _led_task
                                    1- 1542     ;***
                                    1- 1543     ;  pBlock Stats: dbName = C
                                    1- 1544     ;***
                                    1- 1545     ;has an exit
                                    1- 1546     ;functions called:
                                    1- 1547     ;   _tick_GetTickCount
                                    1- 1548     ;   _tick_GetElapsedTime
                                    1- 1549     ;   _tick_GetTickCount
                                    1- 1550     ;   _v0_mode
                                    1- 1551     ;   _v1_mode
                                    1- 1552     ;   _v2_mode
                                    1- 1553     ;   _v3_mode
                                    1- 1554     ;   _tick_GetTickCount
                                    1- 1555     ;   _tick_GetElapsedTime
                                    1- 1556     ;   _tick_GetTickCount
                                    1- 1557     ;   _v0_mode
                                    1- 1558     ;   _v1_mode
                                    1- 1559     ;   _v2_mode
                                    1- 1560     ;   _v3_mode
                                    1- 1561     ;1 compiler assigned register :
                                    1- 1562     ;   r0x1043
                                    1- 1563     ;; Starting pCode block
                                    1- 1564     .segment "code"; module=main, function=_key_process_task
                                    1- 1566     ;local variable name mapping:
     0000                           1- 1569     _key_process_task:
                                    1- 1570     ; 2 exit points
                                    1- 1571     	.line	503, "main.c"; 	if (keyProcessTimer == 0)
                                    1- 1572     	BANKSEL	_key_process_task_keyProcessTimer_65536_102
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 01rr                      1- 1573     	MOVR	_key_process_task_keyProcessTimer_65536_102,W
     0002 11rr                      1- 1574     	IORAR	(_key_process_task_keyProcessTimer_65536_102 + 1),W
     0003 11rr                      1- 1575     	IORAR	(_key_process_task_keyProcessTimer_65536_102 + 2),W
     0004 11rr                      1- 1576     	IORAR	(_key_process_task_keyProcessTimer_65536_102 + 3),W
     0005 0903                      1- 1577     	BTRSS	STATUS,2
                                    1- 1578     	MGOTO	_00298_DS_
     0006 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1579     	.line	505, "main.c"; 	keyProcessTimer = tick_GetTickCount();
                                    1- 1580     	MCALL	_tick_GetTickCount
     0007 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1581     	BANKSEL	r0x1043
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 00rr                      1- 1582     	MOVAR	r0x1043
                                    1- 1583     	BANKSEL	_key_process_task_keyProcessTimer_65536_102
     000A rrrr                      3-  108 m1      .banksel ram_address
     000B 00rr                      1- 1584     	MOVAR	_key_process_task_keyProcessTimer_65536_102
     000C 02rr                      1- 1585     	CLRR	(_key_process_task_keyProcessTimer_65536_102 + 1)
     000D 02rr                      1- 1586     	CLRR	(_key_process_task_keyProcessTimer_65536_102 + 2)
     000E 02rr                      1- 1587     	CLRR	(_key_process_task_keyProcessTimer_65536_102 + 3)
     000F                           1- 1588     _00298_DS_:
                                    1- 1589     	.line	507, "main.c"; 	if (tick_GetElapsedTime(keyProcessTimer) >= KEY_PROCESS_TIMEOUT)
                                    1- 1590     	BANKSEL	_key_process_task_keyProcessTimer_65536_102
     000F rrrr                      3-  108 m1      .banksel ram_address
     0010 01rr                      1- 1591     	MOVR	_key_process_task_keyProcessTimer_65536_102,W
                                    1- 1592     	BANKSEL	r0x1043
     0011 rrrr                      3-  108 m1      .banksel ram_address
     0012 00rr                      1- 1593     	MOVAR	r0x1043
                                    1- 1594     	MCALL	_tick_GetElapsedTime
     0013 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1595     	BANKSEL	r0x1043
     0014 rrrr                      3-  108 m1      .banksel ram_address
     0015 00rr                      1- 1596     	MOVAR	r0x1043
                                    1- 1597     ;;unsigned compare: left < lit (0x2=2), size=1
     0016 2102                      1- 1598     	MOVIA	0x02
     0017 04rr                      1- 1599     	SUBAR	r0x1043,W
     0018 0803                      1- 1600     	BTRSS	STATUS,0
                                    1- 1601     	MGOTO	_00320_DS_
     0019 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1602     	.line	509, "main.c"; 	keyProcessTimer = tick_GetTickCount();
                                    1- 1603     	MCALL	_tick_GetTickCount
     001A 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1604     	BANKSEL	r0x1043
     001B rrrr                      3-  108 m1      .banksel ram_address
     001C 00rr                      1- 1605     	MOVAR	r0x1043
                                    1- 1606     	BANKSEL	_key_process_task_keyProcessTimer_65536_102
     001D rrrr                      3-  108 m1      .banksel ram_address
     001E 00rr                      1- 1607     	MOVAR	_key_process_task_keyProcessTimer_65536_102
     001F 02rr                      1- 1608     	CLRR	(_key_process_task_keyProcessTimer_65536_102 + 1)
     0020 02rr                      1- 1609     	CLRR	(_key_process_task_keyProcessTimer_65536_102 + 2)
     0021 02rr                      1- 1610     	CLRR	(_key_process_task_keyProcessTimer_65536_102 + 3)
                                    1- 1611     	.line	510, "main.c"; 	if(key_click)
                                    1- 1612     	BANKSEL	_key_click
     0022 rrrr                      3-  108 m1      .banksel ram_address
     0023 01rr                      1- 1613     	MOVR	_key_click,W
     0024 0D03                      1- 1614     	BTRSC	STATUS,2
                                    1- 1615     	MGOTO	_00302_DS_
     0025 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1616     	.line	512, "main.c"; 	key_click = 0;
     0026 02rr                      1- 1617     	CLRR	_key_click
                                    1- 1618     	.line	513, "main.c"; 	control_digital = 1;
     0027 2101                      1- 1619     	MOVIA	0x01
                                    1- 1620     	BANKSEL	_control_digital
     0028 rrrr                      3-  108 m1      .banksel ram_address
     0029 00rr                      1- 1621     	MOVAR	_control_digital
                                    1- 1622     	.line	514, "main.c"; 	FlashFlag = 1;
                                    1- 1623     	BANKSEL	_key_process_task_FlashFlag_65536_102
     002A rrrr                      3-  108 m1      .banksel ram_address
     002B 00rr                      1- 1624     	MOVAR	_key_process_task_FlashFlag_65536_102
                                    1- 1625     	.line	515, "main.c"; 	deviceWorkStatus++;
                                    1- 1626     	BANKSEL	_deviceWorkStatus
     002C rrrr                      3-  108 m1      .banksel ram_address
     002D 05rr                      1- 1627     	INCR	_deviceWorkStatus,F
                                    1- 1628     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1629     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 1630     	.line	516, "main.c"; 	if(deviceWorkStatus > V3_STATE)
     002E 2105                      1- 1631     	MOVIA	0x05
     002F 04rr                      1- 1632     	SUBAR	_deviceWorkStatus,W
     0030 0803                      1- 1633     	BTRSS	STATUS,0
                                    1- 1634     	MGOTO	_00302_DS_
     0031 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1635     	.line	518, "main.c"; 	deviceWorkStatus = V0_STATE;
     0032 2101                      1- 1636     	MOVIA	0x01
     0033 00rr                      1- 1637     	MOVAR	_deviceWorkStatus
     0034                           1- 1638     _00302_DS_:
                                    1- 1639     	.line	521, "main.c"; 	if(FlashFlag)
                                    1- 1640     	BANKSEL	_key_process_task_FlashFlag_65536_102
     0034 rrrr                      3-  108 m1      .banksel ram_address
     0035 01rr                      1- 1641     	MOVR	_key_process_task_FlashFlag_65536_102,W
     0036 0D03                      1- 1642     	BTRSC	STATUS,2
                                    1- 1643     	MGOTO	_00315_DS_
     0037 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1644     	.line	523, "main.c"; 	FlashFlag = 0;
     0038 02rr                      1- 1645     	CLRR	_key_process_task_FlashFlag_65536_102
                                    1- 1646     	.line	524, "main.c"; 	if(deviceWorkStatus == V0_STATE)
                                    1- 1647     	BANKSEL	_deviceWorkStatus
     0039 rrrr                      3-  108 m1      .banksel ram_address
     003A 01rr                      1- 1648     	MOVR	_deviceWorkStatus,W
     003B 2401                      1- 1649     	XORIA	0x01
     003C 0903                      1- 1650     	BTRSS	STATUS,2
                                    1- 1651     	MGOTO	_00312_DS_
     003D 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1652     	.line	526, "main.c"; 	buzzerOneTime = 1;
     003E 2101                      1- 1653     	MOVIA	0x01
                                    1- 1654     	BANKSEL	_buzzerOneTime
     003F rrrr                      3-  108 m1      .banksel ram_address
     0040 00rr                      1- 1655     	MOVAR	_buzzerOneTime
                                    1- 1656     	.line	527, "main.c"; 	v0_mode();
                                    1- 1657     	MCALL	_v0_mode
     0041 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1658     	MGOTO	_00315_DS_
     0042 3rrr                      3-   61 m1      LGOTO rom_address
     0043                           1- 1659     _00312_DS_:
                                    1- 1660     	.line	529, "main.c"; 	else if(deviceWorkStatus == V1_STATE)
                                    1- 1661     	BANKSEL	_deviceWorkStatus
     0043 rrrr                      3-  108 m1      .banksel ram_address
     0044 01rr                      1- 1662     	MOVR	_deviceWorkStatus,W
     0045 2402                      1- 1663     	XORIA	0x02
     0046 0903                      1- 1664     	BTRSS	STATUS,2
                                    1- 1665     	MGOTO	_00309_DS_
     0047 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1666     	.line	531, "main.c"; 	buzzerTwoTime = 1;
     0048 2101                      1- 1667     	MOVIA	0x01
                                    1- 1668     	BANKSEL	_buzzerTwoTime
     0049 rrrr                      3-  108 m1      .banksel ram_address
     004A 00rr                      1- 1669     	MOVAR	_buzzerTwoTime
                                    1- 1670     	.line	532, "main.c"; 	v1_mode();
                                    1- 1671     	MCALL	_v1_mode
     004B 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1672     	MGOTO	_00315_DS_
     004C 3rrr                      3-   61 m1      LGOTO rom_address
     004D                           1- 1673     _00309_DS_:
                                    1- 1674     	.line	534, "main.c"; 	else if(deviceWorkStatus == V2_STATE)
                                    1- 1675     	BANKSEL	_deviceWorkStatus
     004D rrrr                      3-  108 m1      .banksel ram_address
     004E 01rr                      1- 1676     	MOVR	_deviceWorkStatus,W
     004F 2403                      1- 1677     	XORIA	0x03
     0050 0903                      1- 1678     	BTRSS	STATUS,2
                                    1- 1679     	MGOTO	_00306_DS_
     0051 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1680     	.line	536, "main.c"; 	buzzerThreeTime = 1;
     0052 2101                      1- 1681     	MOVIA	0x01
                                    1- 1682     	BANKSEL	_buzzerThreeTime
     0053 rrrr                      3-  108 m1      .banksel ram_address
     0054 00rr                      1- 1683     	MOVAR	_buzzerThreeTime
                                    1- 1684     	.line	537, "main.c"; 	v2_mode();
                                    1- 1685     	MCALL	_v2_mode
     0055 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1686     	MGOTO	_00315_DS_
     0056 3rrr                      3-   61 m1      LGOTO rom_address
     0057                           1- 1687     _00306_DS_:
                                    1- 1688     	.line	539, "main.c"; 	else if(deviceWorkStatus == V3_STATE)
                                    1- 1689     	BANKSEL	_deviceWorkStatus
     0057 rrrr                      3-  108 m1      .banksel ram_address
     0058 01rr                      1- 1690     	MOVR	_deviceWorkStatus,W
     0059 2404                      1- 1691     	XORIA	0x04
     005A 0903                      1- 1692     	BTRSS	STATUS,2
                                    1- 1693     	MGOTO	_00315_DS_
     005B 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1694     	.line	541, "main.c"; 	buzzerFourTime = 1;
     005C 2101                      1- 1695     	MOVIA	0x01
                                    1- 1696     	BANKSEL	_buzzerFourTime
     005D rrrr                      3-  108 m1      .banksel ram_address
     005E 00rr                      1- 1697     	MOVAR	_buzzerFourTime
                                    1- 1698     	.line	542, "main.c"; 	v3_mode();
                                    1- 1699     	MCALL	_v3_mode
     005F 2rrr                      3-   64 m1      LCALL rom_address
     0060                           1- 1700     _00315_DS_:
                                    1- 1701     	.line	545, "main.c"; 	if(key_long)
                                    1- 1702     	BANKSEL	_key_long
     0060 rrrr                      3-  108 m1      .banksel ram_address
     0061 01rr                      1- 1703     	MOVR	_key_long,W
     0062 0D03                      1- 1704     	BTRSC	STATUS,2
                                    1- 1705     	MGOTO	_00320_DS_
     0063 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1706     	.line	547, "main.c"; 	key_long = 0;
     0064 02rr                      1- 1707     	CLRR	_key_long
                                    1- 1708     	.line	548, "main.c"; 	TrunOnDeviceFlag = 0;
                                    1- 1709     	BANKSEL	_TrunOnDeviceFlag
     0065 rrrr                      3-  108 m1      .banksel ram_address
     0066 02rr                      1- 1710     	CLRR	_TrunOnDeviceFlag
                                    1- 1711     	.line	549, "main.c"; 	buzzerOneTime = 0;
                                    1- 1712     	BANKSEL	_buzzerOneTime
     0067 rrrr                      3-  108 m1      .banksel ram_address
     0068 02rr                      1- 1713     	CLRR	_buzzerOneTime
                                    1- 1714     	.line	550, "main.c"; 	buzzerTwoTime = 0;
                                    1- 1715     	BANKSEL	_buzzerTwoTime
     0069 rrrr                      3-  108 m1      .banksel ram_address
     006A 02rr                      1- 1716     	CLRR	_buzzerTwoTime
                                    1- 1717     	.line	551, "main.c"; 	buzzerThreeTime = 0;
                                    1- 1718     	BANKSEL	_buzzerThreeTime
     006B rrrr                      3-  108 m1      .banksel ram_address
     006C 02rr                      1- 1719     	CLRR	_buzzerThreeTime
                                    1- 1720     	.line	552, "main.c"; 	buzzerFourTime = 0;
                                    1- 1721     	BANKSEL	_buzzerFourTime
     006D rrrr                      3-  108 m1      .banksel ram_address
     006E 02rr                      1- 1722     	CLRR	_buzzerFourTime
                                    1- 1723     	.line	553, "main.c"; 	TrunOffDeviceFlag = 1;
     006F 2101                      1- 1724     	MOVIA	0x01
                                    1- 1725     	BANKSEL	_TrunOffDeviceFlag
     0070 rrrr                      3-  108 m1      .banksel ram_address
     0071 00rr                      1- 1726     	MOVAR	_TrunOffDeviceFlag
     0072                           1- 1727     _00320_DS_:
                                    1- 1728     	.line	556, "main.c"; 	}
                                    1- 1729     	RETURN	
     0072 0010                      3-   38 m1      ret
                                    1- 1730     ; exit point of _key_process_task
                                    1- 1732     ;***
                                    1- 1733     ;  pBlock Stats: dbName = C
                                    1- 1734     ;***
                                    1- 1735     ;has an exit
                                    1- 1736     ;functions called:
                                    1- 1737     ;   _start_buzzer
                                    1- 1738     ;   _tick_GetTickCount
                                    1- 1739     ;   _tick_GetElapsedTime
                                    1- 1740     ;   _stop_buzzer
                                    1- 1741     ;   _start_buzzer
                                    1- 1742     ;   _tick_GetTickCount
                                    1- 1743     ;   _tick_GetElapsedTime
                                    1- 1744     ;   _stop_buzzer
                                    1- 1745     ;   _tick_GetTickCount
                                    1- 1746     ;   _stop_buzzer
                                    1- 1747     ;   _tick_GetElapsedTime
                                    1- 1748     ;   _start_buzzer
                                    1- 1749     ;   _tick_GetTickCount
                                    1- 1750     ;   _tick_GetElapsedTime
                                    1- 1751     ;   _stop_buzzer
                                    1- 1752     ;   _tick_GetTickCount
                                    1- 1753     ;   _stop_buzzer
                                    1- 1754     ;   _tick_GetElapsedTime
                                    1- 1755     ;   _tick_GetTickCount
                                    1- 1756     ;   _start_buzzer
                                    1- 1757     ;   _tick_GetElapsedTime
                                    1- 1758     ;   _stop_buzzer
                                    1- 1759     ;   _tick_GetTickCount
                                    1- 1760     ;   _stop_buzzer
                                    1- 1761     ;   _tick_GetElapsedTime
                                    1- 1762     ;   _turnOnDevice_buzzer
                                    1- 1763     ;   _tick_GetTickCount
                                    1- 1764     ;   _tick_GetElapsedTime
                                    1- 1765     ;   _stop_buzzer
                                    1- 1766     ;   _tick_GetTickCount
                                    1- 1767     ;   _stop_buzzer
                                    1- 1768     ;   _tick_GetElapsedTime
                                    1- 1769     ;   _start_buzzer
                                    1- 1770     ;   _tick_GetTickCount
                                    1- 1771     ;   _tick_GetElapsedTime
                                    1- 1772     ;   _stop_buzzer
                                    1- 1773     ;   _start_buzzer
                                    1- 1774     ;   _tick_GetTickCount
                                    1- 1775     ;   _tick_GetElapsedTime
                                    1- 1776     ;   _stop_buzzer
                                    1- 1777     ;   _tick_GetTickCount
                                    1- 1778     ;   _stop_buzzer
                                    1- 1779     ;   _tick_GetElapsedTime
                                    1- 1780     ;   _start_buzzer
                                    1- 1781     ;   _tick_GetTickCount
                                    1- 1782     ;   _tick_GetElapsedTime
                                    1- 1783     ;   _stop_buzzer
                                    1- 1784     ;   _tick_GetTickCount
                                    1- 1785     ;   _stop_buzzer
                                    1- 1786     ;   _tick_GetElapsedTime
                                    1- 1787     ;   _tick_GetTickCount
                                    1- 1788     ;   _start_buzzer
                                    1- 1789     ;   _tick_GetElapsedTime
                                    1- 1790     ;   _stop_buzzer
                                    1- 1791     ;   _tick_GetTickCount
                                    1- 1792     ;   _stop_buzzer
                                    1- 1793     ;   _tick_GetElapsedTime
                                    1- 1794     ;   _turnOnDevice_buzzer
                                    1- 1795     ;   _tick_GetTickCount
                                    1- 1796     ;   _tick_GetElapsedTime
                                    1- 1797     ;   _stop_buzzer
                                    1- 1798     ;   _tick_GetTickCount
                                    1- 1799     ;   _stop_buzzer
                                    1- 1800     ;   _tick_GetElapsedTime
                                    1- 1801     ;1 compiler assigned register :
                                    1- 1802     ;   r0x1043
                                    1- 1803     ;; Starting pCode block
                                    1- 1804     .segment "code"; module=main, function=_buzzer_task
                                    1- 1806     ;local variable name mapping:
     0000                           1- 1811     _buzzer_task:
                                    1- 1812     ; 2 exit points
                                    1- 1813     	.line	333, "main.c"; 	if(buzzerOneTime)
                                    1- 1814     	BANKSEL	_buzzerOneTime
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 01rr                      1- 1815     	MOVR	_buzzerOneTime,W
     0002 0D03                      1- 1816     	BTRSC	STATUS,2
                                    1- 1817     	MGOTO	_00231_DS_
     0003 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1818     	.line	335, "main.c"; 	if (ucBuzzerOnTimer == 0)
                                    1- 1819     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     0004 rrrr                      3-  108 m1      .banksel ram_address
     0005 01rr                      1- 1820     	MOVR	_buzzer_task_ucBuzzerOnTimer_65536_65,W
     0006 0903                      1- 1821     	BTRSS	STATUS,2
                                    1- 1822     	MGOTO	_00227_DS_
     0007 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1823     	.line	337, "main.c"; 	start_buzzer();
                                    1- 1824     	MCALL	_start_buzzer
     0008 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1825     	.line	338, "main.c"; 	ucBuzzerOnTimer = tick_GetTickCount();
                                    1- 1826     	MCALL	_tick_GetTickCount
     0009 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1827     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     000A rrrr                      3-  108 m1      .banksel ram_address
     000B 00rr                      1- 1828     	MOVAR	_buzzer_task_ucBuzzerOnTimer_65536_65
     000C                           1- 1829     _00227_DS_:
                                    1- 1830     	.line	340, "main.c"; 	if (tick_GetElapsedTime(ucBuzzerOnTimer) >= 4)     //500ms
                                    1- 1831     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     000C rrrr                      3-  108 m1      .banksel ram_address
     000D 01rr                      1- 1832     	MOVR	_buzzer_task_ucBuzzerOnTimer_65536_65,W
                                    1- 1833     	MCALL	_tick_GetElapsedTime
     000E 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1834     	BANKSEL	r0x1043
     000F rrrr                      3-  108 m1      .banksel ram_address
     0010 00rr                      1- 1835     	MOVAR	r0x1043
                                    1- 1836     ;;unsigned compare: left < lit (0x4=4), size=1
     0011 2104                      1- 1837     	MOVIA	0x04
     0012 04rr                      1- 1838     	SUBAR	r0x1043,W
     0013 0803                      1- 1839     	BTRSS	STATUS,0
                                    1- 1840     	MGOTO	_00231_DS_
     0014 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1841     	.line	342, "main.c"; 	ucBuzzerOnTimer = 0;
                                    1- 1842     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     0015 rrrr                      3-  108 m1      .banksel ram_address
     0016 02rr                      1- 1843     	CLRR	_buzzer_task_ucBuzzerOnTimer_65536_65
                                    1- 1844     	.line	343, "main.c"; 	buzzerOneTime = 0;
                                    1- 1845     	BANKSEL	_buzzerOneTime
     0017 rrrr                      3-  108 m1      .banksel ram_address
     0018 02rr                      1- 1846     	CLRR	_buzzerOneTime
                                    1- 1847     	.line	344, "main.c"; 	stop_buzzer();
                                    1- 1848     	MCALL	_stop_buzzer
     0019 2rrr                      3-   64 m1      LCALL rom_address
     001A                           1- 1849     _00231_DS_:
                                    1- 1850     	.line	347, "main.c"; 	if(buzzerTwoTime)
                                    1- 1851     	BANKSEL	_buzzerTwoTime
     001A rrrr                      3-  108 m1      .banksel ram_address
     001B 01rr                      1- 1852     	MOVR	_buzzerTwoTime,W
     001C 0D03                      1- 1853     	BTRSC	STATUS,2
                                    1- 1854     	MGOTO	_00246_DS_
     001D 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1855     	.line	349, "main.c"; 	if(!startBuzzerOffFlag)
                                    1- 1856     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     001E rrrr                      3-  108 m1      .banksel ram_address
     001F 01rr                      1- 1857     	MOVR	_buzzer_task_startBuzzerOffFlag_65536_65,W
     0020 0903                      1- 1858     	BTRSS	STATUS,2
                                    1- 1859     	MGOTO	_00243_DS_
     0021 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1860     	.line	351, "main.c"; 	if (ucBuzzerOnTimer == 0)
                                    1- 1861     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     0022 rrrr                      3-  108 m1      .banksel ram_address
     0023 01rr                      1- 1862     	MOVR	_buzzer_task_ucBuzzerOnTimer_65536_65,W
     0024 0903                      1- 1863     	BTRSS	STATUS,2
                                    1- 1864     	MGOTO	_00233_DS_
     0025 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1865     	.line	353, "main.c"; 	start_buzzer();
                                    1- 1866     	MCALL	_start_buzzer
     0026 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1867     	.line	354, "main.c"; 	ucBuzzerOnTimer = tick_GetTickCount();
                                    1- 1868     	MCALL	_tick_GetTickCount
     0027 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1869     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     0028 rrrr                      3-  108 m1      .banksel ram_address
     0029 00rr                      1- 1870     	MOVAR	_buzzer_task_ucBuzzerOnTimer_65536_65
     002A                           1- 1871     _00233_DS_:
                                    1- 1872     	.line	356, "main.c"; 	if (tick_GetElapsedTime(ucBuzzerOnTimer) >= 4)     //500ms
                                    1- 1873     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     002A rrrr                      3-  108 m1      .banksel ram_address
     002B 01rr                      1- 1874     	MOVR	_buzzer_task_ucBuzzerOnTimer_65536_65,W
                                    1- 1875     	MCALL	_tick_GetElapsedTime
     002C 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1876     	BANKSEL	r0x1043
     002D rrrr                      3-  108 m1      .banksel ram_address
     002E 00rr                      1- 1877     	MOVAR	r0x1043
                                    1- 1878     ;;unsigned compare: left < lit (0x4=4), size=1
     002F 2104                      1- 1879     	MOVIA	0x04
     0030 04rr                      1- 1880     	SUBAR	r0x1043,W
     0031 0803                      1- 1881     	BTRSS	STATUS,0
                                    1- 1882     	MGOTO	_00246_DS_
     0032 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1883     	.line	358, "main.c"; 	ucBuzzerOnTimer = 0;
                                    1- 1884     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     0033 rrrr                      3-  108 m1      .banksel ram_address
     0034 02rr                      1- 1885     	CLRR	_buzzer_task_ucBuzzerOnTimer_65536_65
                                    1- 1886     	.line	359, "main.c"; 	ucBuzzerOffTimer = 0;
                                    1- 1887     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     0035 rrrr                      3-  108 m1      .banksel ram_address
     0036 02rr                      1- 1888     	CLRR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 1889     	.line	360, "main.c"; 	startBuzzerOffFlag = 1;
     0037 2101                      1- 1890     	MOVIA	0x01
                                    1- 1891     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     0038 rrrr                      3-  108 m1      .banksel ram_address
     0039 00rr                      1- 1892     	MOVAR	_buzzer_task_startBuzzerOffFlag_65536_65
                                    1- 1893     	.line	361, "main.c"; 	stop_buzzer();
                                    1- 1894     	MCALL	_stop_buzzer
     003A 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1895     	MGOTO	_00246_DS_
     003B 3rrr                      3-   61 m1      LGOTO rom_address
     003C                           1- 1896     _00243_DS_:
                                    1- 1897     	.line	366, "main.c"; 	if(ucBuzzerOffTimer == 0)
                                    1- 1898     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     003C rrrr                      3-  108 m1      .banksel ram_address
     003D 01rr                      1- 1899     	MOVR	_buzzer_task_ucBuzzerOffTimer_65536_65,W
     003E 0903                      1- 1900     	BTRSS	STATUS,2
                                    1- 1901     	MGOTO	_00237_DS_
     003F 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1902     	.line	368, "main.c"; 	ucBuzzerOffTimer = tick_GetTickCount();
                                    1- 1903     	MCALL	_tick_GetTickCount
     0040 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1904     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     0041 rrrr                      3-  108 m1      .banksel ram_address
     0042 00rr                      1- 1905     	MOVAR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 1906     	.line	369, "main.c"; 	stop_buzzer();
                                    1- 1907     	MCALL	_stop_buzzer
     0043 2rrr                      3-   64 m1      LCALL rom_address
     0044                           1- 1908     _00237_DS_:
                                    1- 1909     	.line	371, "main.c"; 	if(tick_GetElapsedTime(ucBuzzerOffTimer) >= 8)
                                    1- 1910     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     0044 rrrr                      3-  108 m1      .banksel ram_address
     0045 01rr                      1- 1911     	MOVR	_buzzer_task_ucBuzzerOffTimer_65536_65,W
                                    1- 1912     	MCALL	_tick_GetElapsedTime
     0046 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1913     	BANKSEL	r0x1043
     0047 rrrr                      3-  108 m1      .banksel ram_address
     0048 00rr                      1- 1914     	MOVAR	r0x1043
                                    1- 1915     ;;unsigned compare: left < lit (0x8=8), size=1
     0049 2108                      1- 1916     	MOVIA	0x08
     004A 04rr                      1- 1917     	SUBAR	r0x1043,W
     004B 0803                      1- 1918     	BTRSS	STATUS,0
                                    1- 1919     	MGOTO	_00246_DS_
     004C 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1920     	.line	373, "main.c"; 	startBuzzerOffFlag = 0;
                                    1- 1921     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     004D rrrr                      3-  108 m1      .banksel ram_address
     004E 02rr                      1- 1922     	CLRR	_buzzer_task_startBuzzerOffFlag_65536_65
                                    1- 1923     	.line	374, "main.c"; 	ucBuzzerOffTimer = 0;
                                    1- 1924     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     004F rrrr                      3-  108 m1      .banksel ram_address
     0050 02rr                      1- 1925     	CLRR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 1926     	.line	375, "main.c"; 	BuzzerTimes++;
                                    1- 1927     	BANKSEL	_buzzer_task_BuzzerTimes_65536_65
     0051 rrrr                      3-  108 m1      .banksel ram_address
     0052 05rr                      1- 1928     	INCR	_buzzer_task_BuzzerTimes_65536_65,F
                                    1- 1929     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1930     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 1931     	.line	376, "main.c"; 	if(BuzzerTimes>1)
     0053 2102                      1- 1932     	MOVIA	0x02
     0054 04rr                      1- 1933     	SUBAR	_buzzer_task_BuzzerTimes_65536_65,W
     0055 0803                      1- 1934     	BTRSS	STATUS,0
                                    1- 1935     	MGOTO	_00246_DS_
     0056 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1936     	.line	378, "main.c"; 	BuzzerTimes = 0;
     0057 02rr                      1- 1937     	CLRR	_buzzer_task_BuzzerTimes_65536_65
                                    1- 1938     	.line	379, "main.c"; 	buzzerTwoTime = 0;
                                    1- 1939     	BANKSEL	_buzzerTwoTime
     0058 rrrr                      3-  108 m1      .banksel ram_address
     0059 02rr                      1- 1940     	CLRR	_buzzerTwoTime
     005A                           1- 1941     _00246_DS_:
                                    1- 1942     	.line	384, "main.c"; 	if(buzzerThreeTime)
                                    1- 1943     	BANKSEL	_buzzerThreeTime
     005A rrrr                      3-  108 m1      .banksel ram_address
     005B 01rr                      1- 1944     	MOVR	_buzzerThreeTime,W
     005C 0D03                      1- 1945     	BTRSC	STATUS,2
                                    1- 1946     	MGOTO	_00261_DS_
     005D 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1947     	.line	386, "main.c"; 	if(!startBuzzerOffFlag)
                                    1- 1948     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     005E rrrr                      3-  108 m1      .banksel ram_address
     005F 01rr                      1- 1949     	MOVR	_buzzer_task_startBuzzerOffFlag_65536_65,W
     0060 0903                      1- 1950     	BTRSS	STATUS,2
                                    1- 1951     	MGOTO	_00258_DS_
     0061 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1952     	.line	388, "main.c"; 	if (ucBuzzerOnTimer == 0)
                                    1- 1953     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     0062 rrrr                      3-  108 m1      .banksel ram_address
     0063 01rr                      1- 1954     	MOVR	_buzzer_task_ucBuzzerOnTimer_65536_65,W
     0064 0903                      1- 1955     	BTRSS	STATUS,2
                                    1- 1956     	MGOTO	_00248_DS_
     0065 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1957     	.line	390, "main.c"; 	start_buzzer();
                                    1- 1958     	MCALL	_start_buzzer
     0066 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1959     	.line	391, "main.c"; 	ucBuzzerOnTimer = tick_GetTickCount();
                                    1- 1960     	MCALL	_tick_GetTickCount
     0067 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1961     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     0068 rrrr                      3-  108 m1      .banksel ram_address
     0069 00rr                      1- 1962     	MOVAR	_buzzer_task_ucBuzzerOnTimer_65536_65
     006A                           1- 1963     _00248_DS_:
                                    1- 1964     	.line	393, "main.c"; 	if (tick_GetElapsedTime(ucBuzzerOnTimer) >= 4)     //500ms
                                    1- 1965     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     006A rrrr                      3-  108 m1      .banksel ram_address
     006B 01rr                      1- 1966     	MOVR	_buzzer_task_ucBuzzerOnTimer_65536_65,W
                                    1- 1967     	MCALL	_tick_GetElapsedTime
     006C 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1968     	BANKSEL	r0x1043
     006D rrrr                      3-  108 m1      .banksel ram_address
     006E 00rr                      1- 1969     	MOVAR	r0x1043
                                    1- 1970     ;;unsigned compare: left < lit (0x4=4), size=1
     006F 2104                      1- 1971     	MOVIA	0x04
     0070 04rr                      1- 1972     	SUBAR	r0x1043,W
     0071 0803                      1- 1973     	BTRSS	STATUS,0
                                    1- 1974     	MGOTO	_00261_DS_
     0072 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1975     	.line	395, "main.c"; 	ucBuzzerOnTimer = 0;
                                    1- 1976     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     0073 rrrr                      3-  108 m1      .banksel ram_address
     0074 02rr                      1- 1977     	CLRR	_buzzer_task_ucBuzzerOnTimer_65536_65
                                    1- 1978     	.line	396, "main.c"; 	ucBuzzerOffTimer = 0;
                                    1- 1979     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     0075 rrrr                      3-  108 m1      .banksel ram_address
     0076 02rr                      1- 1980     	CLRR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 1981     	.line	397, "main.c"; 	startBuzzerOffFlag = 1;
     0077 2101                      1- 1982     	MOVIA	0x01
                                    1- 1983     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     0078 rrrr                      3-  108 m1      .banksel ram_address
     0079 00rr                      1- 1984     	MOVAR	_buzzer_task_startBuzzerOffFlag_65536_65
                                    1- 1985     	.line	398, "main.c"; 	stop_buzzer();
                                    1- 1986     	MCALL	_stop_buzzer
     007A 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1987     	MGOTO	_00261_DS_
     007B 3rrr                      3-   61 m1      LGOTO rom_address
     007C                           1- 1988     _00258_DS_:
                                    1- 1989     	.line	403, "main.c"; 	if(ucBuzzerOffTimer == 0)
                                    1- 1990     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     007C rrrr                      3-  108 m1      .banksel ram_address
     007D 01rr                      1- 1991     	MOVR	_buzzer_task_ucBuzzerOffTimer_65536_65,W
     007E 0903                      1- 1992     	BTRSS	STATUS,2
                                    1- 1993     	MGOTO	_00252_DS_
     007F 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 1994     	.line	405, "main.c"; 	ucBuzzerOffTimer = tick_GetTickCount();
                                    1- 1995     	MCALL	_tick_GetTickCount
     0080 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 1996     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     0081 rrrr                      3-  108 m1      .banksel ram_address
     0082 00rr                      1- 1997     	MOVAR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 1998     	.line	406, "main.c"; 	stop_buzzer();
                                    1- 1999     	MCALL	_stop_buzzer
     0083 2rrr                      3-   64 m1      LCALL rom_address
     0084                           1- 2000     _00252_DS_:
                                    1- 2001     	.line	408, "main.c"; 	if(tick_GetElapsedTime(ucBuzzerOffTimer) >= 8)
                                    1- 2002     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     0084 rrrr                      3-  108 m1      .banksel ram_address
     0085 01rr                      1- 2003     	MOVR	_buzzer_task_ucBuzzerOffTimer_65536_65,W
                                    1- 2004     	MCALL	_tick_GetElapsedTime
     0086 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2005     	BANKSEL	r0x1043
     0087 rrrr                      3-  108 m1      .banksel ram_address
     0088 00rr                      1- 2006     	MOVAR	r0x1043
                                    1- 2007     ;;unsigned compare: left < lit (0x8=8), size=1
     0089 2108                      1- 2008     	MOVIA	0x08
     008A 04rr                      1- 2009     	SUBAR	r0x1043,W
     008B 0803                      1- 2010     	BTRSS	STATUS,0
                                    1- 2011     	MGOTO	_00261_DS_
     008C 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2012     	.line	410, "main.c"; 	startBuzzerOffFlag = 0;
                                    1- 2013     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     008D rrrr                      3-  108 m1      .banksel ram_address
     008E 02rr                      1- 2014     	CLRR	_buzzer_task_startBuzzerOffFlag_65536_65
                                    1- 2015     	.line	411, "main.c"; 	ucBuzzerOffTimer = 0;
                                    1- 2016     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     008F rrrr                      3-  108 m1      .banksel ram_address
     0090 02rr                      1- 2017     	CLRR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 2018     	.line	412, "main.c"; 	BuzzerTimes++;
                                    1- 2019     	BANKSEL	_buzzer_task_BuzzerTimes_65536_65
     0091 rrrr                      3-  108 m1      .banksel ram_address
     0092 05rr                      1- 2020     	INCR	_buzzer_task_BuzzerTimes_65536_65,F
                                    1- 2021     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2022     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 2023     	.line	413, "main.c"; 	if(BuzzerTimes>2)
     0093 2103                      1- 2024     	MOVIA	0x03
     0094 04rr                      1- 2025     	SUBAR	_buzzer_task_BuzzerTimes_65536_65,W
     0095 0803                      1- 2026     	BTRSS	STATUS,0
                                    1- 2027     	MGOTO	_00261_DS_
     0096 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2028     	.line	415, "main.c"; 	BuzzerTimes = 0;
     0097 02rr                      1- 2029     	CLRR	_buzzer_task_BuzzerTimes_65536_65
                                    1- 2030     	.line	416, "main.c"; 	buzzerThreeTime = 0;
                                    1- 2031     	BANKSEL	_buzzerThreeTime
     0098 rrrr                      3-  108 m1      .banksel ram_address
     0099 02rr                      1- 2032     	CLRR	_buzzerThreeTime
     009A                           1- 2033     _00261_DS_:
                                    1- 2034     	.line	422, "main.c"; 	if(buzzerFourTime)
                                    1- 2035     	BANKSEL	_buzzerFourTime
     009A rrrr                      3-  108 m1      .banksel ram_address
     009B 01rr                      1- 2036     	MOVR	_buzzerFourTime,W
     009C 0D03                      1- 2037     	BTRSC	STATUS,2
                                    1- 2038     	MGOTO	_00276_DS_
     009D 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2039     	.line	424, "main.c"; 	if(!startBuzzerOffFlag)
                                    1- 2040     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     009E rrrr                      3-  108 m1      .banksel ram_address
     009F 01rr                      1- 2041     	MOVR	_buzzer_task_startBuzzerOffFlag_65536_65,W
     00A0 0903                      1- 2042     	BTRSS	STATUS,2
                                    1- 2043     	MGOTO	_00273_DS_
     00A1 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2044     	.line	426, "main.c"; 	if (ucBuzzerOnTimer == 0)
                                    1- 2045     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     00A2 rrrr                      3-  108 m1      .banksel ram_address
     00A3 01rr                      1- 2046     	MOVR	_buzzer_task_ucBuzzerOnTimer_65536_65,W
     00A4 0903                      1- 2047     	BTRSS	STATUS,2
                                    1- 2048     	MGOTO	_00263_DS_
     00A5 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2049     	.line	428, "main.c"; 	ucBuzzerOnTimer = tick_GetTickCount();
                                    1- 2050     	MCALL	_tick_GetTickCount
     00A6 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2051     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     00A7 rrrr                      3-  108 m1      .banksel ram_address
     00A8 00rr                      1- 2052     	MOVAR	_buzzer_task_ucBuzzerOnTimer_65536_65
                                    1- 2053     	.line	429, "main.c"; 	start_buzzer();
                                    1- 2054     	MCALL	_start_buzzer
     00A9 2rrr                      3-   64 m1      LCALL rom_address
     00AA                           1- 2055     _00263_DS_:
                                    1- 2056     	.line	431, "main.c"; 	if (tick_GetElapsedTime(ucBuzzerOnTimer) >= 4)     //500ms
                                    1- 2057     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     00AA rrrr                      3-  108 m1      .banksel ram_address
     00AB 01rr                      1- 2058     	MOVR	_buzzer_task_ucBuzzerOnTimer_65536_65,W
                                    1- 2059     	MCALL	_tick_GetElapsedTime
     00AC 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2060     	BANKSEL	r0x1043
     00AD rrrr                      3-  108 m1      .banksel ram_address
     00AE 00rr                      1- 2061     	MOVAR	r0x1043
                                    1- 2062     ;;unsigned compare: left < lit (0x4=4), size=1
     00AF 2104                      1- 2063     	MOVIA	0x04
     00B0 04rr                      1- 2064     	SUBAR	r0x1043,W
     00B1 0803                      1- 2065     	BTRSS	STATUS,0
                                    1- 2066     	MGOTO	_00276_DS_
     00B2 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2067     	.line	433, "main.c"; 	ucBuzzerOnTimer = 0;
                                    1- 2068     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     00B3 rrrr                      3-  108 m1      .banksel ram_address
     00B4 02rr                      1- 2069     	CLRR	_buzzer_task_ucBuzzerOnTimer_65536_65
                                    1- 2070     	.line	434, "main.c"; 	ucBuzzerOffTimer = 0;
                                    1- 2071     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     00B5 rrrr                      3-  108 m1      .banksel ram_address
     00B6 02rr                      1- 2072     	CLRR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 2073     	.line	435, "main.c"; 	startBuzzerOffFlag = 1;
     00B7 2101                      1- 2074     	MOVIA	0x01
                                    1- 2075     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     00B8 rrrr                      3-  108 m1      .banksel ram_address
     00B9 00rr                      1- 2076     	MOVAR	_buzzer_task_startBuzzerOffFlag_65536_65
                                    1- 2077     	.line	436, "main.c"; 	stop_buzzer();
                                    1- 2078     	MCALL	_stop_buzzer
     00BA 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2079     	MGOTO	_00276_DS_
     00BB 3rrr                      3-   61 m1      LGOTO rom_address
     00BC                           1- 2080     _00273_DS_:
                                    1- 2081     	.line	441, "main.c"; 	if(ucBuzzerOffTimer == 0)
                                    1- 2082     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     00BC rrrr                      3-  108 m1      .banksel ram_address
     00BD 01rr                      1- 2083     	MOVR	_buzzer_task_ucBuzzerOffTimer_65536_65,W
     00BE 0903                      1- 2084     	BTRSS	STATUS,2
                                    1- 2085     	MGOTO	_00267_DS_
     00BF 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2086     	.line	443, "main.c"; 	ucBuzzerOffTimer = tick_GetTickCount();
                                    1- 2087     	MCALL	_tick_GetTickCount
     00C0 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2088     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     00C1 rrrr                      3-  108 m1      .banksel ram_address
     00C2 00rr                      1- 2089     	MOVAR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 2090     	.line	444, "main.c"; 	stop_buzzer();
                                    1- 2091     	MCALL	_stop_buzzer
     00C3 2rrr                      3-   64 m1      LCALL rom_address
     00C4                           1- 2092     _00267_DS_:
                                    1- 2093     	.line	446, "main.c"; 	if(tick_GetElapsedTime(ucBuzzerOffTimer) >= 8)
                                    1- 2094     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     00C4 rrrr                      3-  108 m1      .banksel ram_address
     00C5 01rr                      1- 2095     	MOVR	_buzzer_task_ucBuzzerOffTimer_65536_65,W
                                    1- 2096     	MCALL	_tick_GetElapsedTime
     00C6 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2097     	BANKSEL	r0x1043
     00C7 rrrr                      3-  108 m1      .banksel ram_address
     00C8 00rr                      1- 2098     	MOVAR	r0x1043
                                    1- 2099     ;;unsigned compare: left < lit (0x8=8), size=1
     00C9 2108                      1- 2100     	MOVIA	0x08
     00CA 04rr                      1- 2101     	SUBAR	r0x1043,W
     00CB 0803                      1- 2102     	BTRSS	STATUS,0
                                    1- 2103     	MGOTO	_00276_DS_
     00CC 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2104     	.line	448, "main.c"; 	startBuzzerOffFlag = 0;
                                    1- 2105     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     00CD rrrr                      3-  108 m1      .banksel ram_address
     00CE 02rr                      1- 2106     	CLRR	_buzzer_task_startBuzzerOffFlag_65536_65
                                    1- 2107     	.line	449, "main.c"; 	ucBuzzerOffTimer = 0;
                                    1- 2108     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     00CF rrrr                      3-  108 m1      .banksel ram_address
     00D0 02rr                      1- 2109     	CLRR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 2110     	.line	450, "main.c"; 	BuzzerTimes++;
                                    1- 2111     	BANKSEL	_buzzer_task_BuzzerTimes_65536_65
     00D1 rrrr                      3-  108 m1      .banksel ram_address
     00D2 05rr                      1- 2112     	INCR	_buzzer_task_BuzzerTimes_65536_65,F
                                    1- 2113     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2114     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1- 2115     	.line	451, "main.c"; 	if(BuzzerTimes>3)
     00D3 2104                      1- 2116     	MOVIA	0x04
     00D4 04rr                      1- 2117     	SUBAR	_buzzer_task_BuzzerTimes_65536_65,W
     00D5 0803                      1- 2118     	BTRSS	STATUS,0
                                    1- 2119     	MGOTO	_00276_DS_
     00D6 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2120     	.line	453, "main.c"; 	BuzzerTimes = 0;
     00D7 02rr                      1- 2121     	CLRR	_buzzer_task_BuzzerTimes_65536_65
                                    1- 2122     	.line	454, "main.c"; 	buzzerFourTime = 0;
                                    1- 2123     	BANKSEL	_buzzerFourTime
     00D8 rrrr                      3-  108 m1      .banksel ram_address
     00D9 02rr                      1- 2124     	CLRR	_buzzerFourTime
     00DA                           1- 2125     _00276_DS_:
                                    1- 2126     	.line	459, "main.c"; 	if(turnOnOffBuzzer)
                                    1- 2127     	BANKSEL	_turnOnOffBuzzer
     00DA rrrr                      3-  108 m1      .banksel ram_address
     00DB 01rr                      1- 2128     	MOVR	_turnOnOffBuzzer,W
     00DC 0D03                      1- 2129     	BTRSC	STATUS,2
                                    1- 2130     	MGOTO	_00292_DS_
     00DD 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2131     	.line	461, "main.c"; 	if(!startBuzzerOffFlag)
                                    1- 2132     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     00DE rrrr                      3-  108 m1      .banksel ram_address
     00DF 01rr                      1- 2133     	MOVR	_buzzer_task_startBuzzerOffFlag_65536_65,W
     00E0 0903                      1- 2134     	BTRSS	STATUS,2
                                    1- 2135     	MGOTO	_00288_DS_
     00E1 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2136     	.line	463, "main.c"; 	if (ucBuzzerOnTimer == 0)
                                    1- 2137     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     00E2 rrrr                      3-  108 m1      .banksel ram_address
     00E3 01rr                      1- 2138     	MOVR	_buzzer_task_ucBuzzerOnTimer_65536_65,W
     00E4 0903                      1- 2139     	BTRSS	STATUS,2
                                    1- 2140     	MGOTO	_00278_DS_
     00E5 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2141     	.line	465, "main.c"; 	turnOnDevice_buzzer();
                                    1- 2142     	MCALL	_turnOnDevice_buzzer
     00E6 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2143     	.line	466, "main.c"; 	ucBuzzerOnTimer = tick_GetTickCount();
                                    1- 2144     	MCALL	_tick_GetTickCount
     00E7 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2145     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     00E8 rrrr                      3-  108 m1      .banksel ram_address
     00E9 00rr                      1- 2146     	MOVAR	_buzzer_task_ucBuzzerOnTimer_65536_65
     00EA                           1- 2147     _00278_DS_:
                                    1- 2148     	.line	468, "main.c"; 	if (tick_GetElapsedTime(ucBuzzerOnTimer) >= 3)     //30ms
                                    1- 2149     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     00EA rrrr                      3-  108 m1      .banksel ram_address
     00EB 01rr                      1- 2150     	MOVR	_buzzer_task_ucBuzzerOnTimer_65536_65,W
                                    1- 2151     	MCALL	_tick_GetElapsedTime
     00EC 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2152     	BANKSEL	r0x1043
     00ED rrrr                      3-  108 m1      .banksel ram_address
     00EE 00rr                      1- 2153     	MOVAR	r0x1043
                                    1- 2154     ;;unsigned compare: left < lit (0x3=3), size=1
     00EF 2103                      1- 2155     	MOVIA	0x03
     00F0 04rr                      1- 2156     	SUBAR	r0x1043,W
     00F1 0803                      1- 2157     	BTRSS	STATUS,0
                                    1- 2158     	MGOTO	_00292_DS_
     00F2 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2159     	.line	470, "main.c"; 	ucBuzzerOnTimer = 0;
                                    1- 2160     	BANKSEL	_buzzer_task_ucBuzzerOnTimer_65536_65
     00F3 rrrr                      3-  108 m1      .banksel ram_address
     00F4 02rr                      1- 2161     	CLRR	_buzzer_task_ucBuzzerOnTimer_65536_65
                                    1- 2162     	.line	471, "main.c"; 	ucBuzzerOffTimer = 0;
                                    1- 2163     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     00F5 rrrr                      3-  108 m1      .banksel ram_address
     00F6 02rr                      1- 2164     	CLRR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 2165     	.line	472, "main.c"; 	startBuzzerOffFlag = 1;
     00F7 2101                      1- 2166     	MOVIA	0x01
                                    1- 2167     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     00F8 rrrr                      3-  108 m1      .banksel ram_address
     00F9 00rr                      1- 2168     	MOVAR	_buzzer_task_startBuzzerOffFlag_65536_65
                                    1- 2169     	.line	473, "main.c"; 	stop_buzzer();
                                    1- 2170     	MCALL	_stop_buzzer
     00FA 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2171     	MGOTO	_00292_DS_
     00FB 3rrr                      3-   61 m1      LGOTO rom_address
     00FC                           1- 2172     _00288_DS_:
                                    1- 2173     	.line	478, "main.c"; 	if(ucBuzzerOffTimer == 0)
                                    1- 2174     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     00FC rrrr                      3-  108 m1      .banksel ram_address
     00FD 01rr                      1- 2175     	MOVR	_buzzer_task_ucBuzzerOffTimer_65536_65,W
     00FE 0903                      1- 2176     	BTRSS	STATUS,2
                                    1- 2177     	MGOTO	_00282_DS_
     00FF 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2178     	.line	480, "main.c"; 	ucBuzzerOffTimer = tick_GetTickCount();
                                    1- 2179     	MCALL	_tick_GetTickCount
     0100 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2180     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     0101 rrrr                      3-  108 m1      .banksel ram_address
     0102 00rr                      1- 2181     	MOVAR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 2182     	.line	481, "main.c"; 	stop_buzzer();
                                    1- 2183     	MCALL	_stop_buzzer
     0103 2rrr                      3-   64 m1      LCALL rom_address
     0104                           1- 2184     _00282_DS_:
                                    1- 2185     	.line	483, "main.c"; 	if(tick_GetElapsedTime(ucBuzzerOffTimer) >= 4)    //60ms
                                    1- 2186     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     0104 rrrr                      3-  108 m1      .banksel ram_address
     0105 01rr                      1- 2187     	MOVR	_buzzer_task_ucBuzzerOffTimer_65536_65,W
                                    1- 2188     	MCALL	_tick_GetElapsedTime
     0106 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2189     	BANKSEL	r0x1043
     0107 rrrr                      3-  108 m1      .banksel ram_address
     0108 00rr                      1- 2190     	MOVAR	r0x1043
                                    1- 2191     ;;unsigned compare: left < lit (0x4=4), size=1
     0109 2104                      1- 2192     	MOVIA	0x04
     010A 04rr                      1- 2193     	SUBAR	r0x1043,W
     010B 0803                      1- 2194     	BTRSS	STATUS,0
                                    1- 2195     	MGOTO	_00292_DS_
     010C 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2196     	.line	485, "main.c"; 	startBuzzerOffFlag = 0;
                                    1- 2197     	BANKSEL	_buzzer_task_startBuzzerOffFlag_65536_65
     010D rrrr                      3-  108 m1      .banksel ram_address
     010E 02rr                      1- 2198     	CLRR	_buzzer_task_startBuzzerOffFlag_65536_65
                                    1- 2199     	.line	486, "main.c"; 	ucBuzzerOffTimer = 0;
                                    1- 2200     	BANKSEL	_buzzer_task_ucBuzzerOffTimer_65536_65
     010F rrrr                      3-  108 m1      .banksel ram_address
     0110 02rr                      1- 2201     	CLRR	_buzzer_task_ucBuzzerOffTimer_65536_65
                                    1- 2202     	.line	487, "main.c"; 	BuzzerTimes++;
                                    1- 2203     	BANKSEL	_buzzer_task_BuzzerTimes_65536_65
     0111 rrrr                      3-  108 m1      .banksel ram_address
     0112 05rr                      1- 2204     	INCR	_buzzer_task_BuzzerTimes_65536_65,F
                                    1- 2205     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2206     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2207     	.line	488, "main.c"; 	if(BuzzerTimes>1)
     0113 2102                      1- 2208     	MOVIA	0x02
     0114 04rr                      1- 2209     	SUBAR	_buzzer_task_BuzzerTimes_65536_65,W
     0115 0803                      1- 2210     	BTRSS	STATUS,0
                                    1- 2211     	MGOTO	_00292_DS_
     0116 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2212     	.line	490, "main.c"; 	BuzzerTimes = 0;
     0117 02rr                      1- 2213     	CLRR	_buzzer_task_BuzzerTimes_65536_65
                                    1- 2214     	.line	491, "main.c"; 	turnOnOffBuzzer = 0;
                                    1- 2215     	BANKSEL	_turnOnOffBuzzer
     0118 rrrr                      3-  108 m1      .banksel ram_address
     0119 02rr                      1- 2216     	CLRR	_turnOnOffBuzzer
                                    1- 2217     	.line	492, "main.c"; 	wakeupFlag = 0;
                                    1- 2218     	BANKSEL	_wakeupFlag
     011A rrrr                      3-  108 m1      .banksel ram_address
     011B 02rr                      1- 2219     	CLRR	_wakeupFlag
     011C                           1- 2220     _00292_DS_:
                                    1- 2221     	.line	498, "main.c"; 	}
                                    1- 2222     	RETURN	
     011C 0010                      3-   38 m1      ret
                                    1- 2223     ; exit point of _buzzer_task
                                    1- 2225     ;***
                                    1- 2226     ;  pBlock Stats: dbName = C
                                    1- 2227     ;***
                                    1- 2228     ;has an exit
                                    1- 2229     ;; Starting pCode block
                                    1- 2230     .segment "code"; module=main, function=_turnOnDevice_buzzer
     0000                           1- 2232     _turnOnDevice_buzzer:
                                    1- 2233     ; 2 exit points
                                    1- 2234     	.line	321, "main.c"; 	TMRH = 0;								// 
     0000 02rr                      1- 2235     	CLRR	_TMRH
                                    1- 2236     	.line	322, "main.c"; 	TMR1 = 0x7F;//0xFF;							// Move FFH to TMR1 (Initial Timer1 register) 
     0001 217F                      1- 2237     	MOVIA	0x7f
     0002 00rr                      1- 2238     	SFUN	_TMR1
                                    1- 2239     	.line	323, "main.c"; 	PWM1DUTY = 0x04;//C_PWM_DUTY_25;				// PWM1 Duty = 64/256 = 25%			
     0003 2104                      1- 2240     	MOVIA	0x04
     0004 00rr                      1- 2241     	SFUN	_PWM1DUTY
                                    1- 2242     	.line	324, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB3 , PWM1 output is active high, reloaded from TMR1, non-stop mode 
     0005 2183                      1- 2243     	MOVIA	0x83
     0006 00rr                      1- 2244     	SFUN	_T1CR1
                                    1- 2245     	.line	325, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0007 0200                      1- 2246     	CLRA	
     0008 00rr                      1- 2247     	SFUN	_T1CR2
                                    1- 2248     	.line	326, "main.c"; 	}
                                    1- 2249     	RETURN	
     0009 0010                      3-   38 m1      ret
                                    1- 2250     ; exit point of _turnOnDevice_buzzer
                                    1- 2252     ;***
                                    1- 2253     ;  pBlock Stats: dbName = C
                                    1- 2254     ;***
                                    1- 2255     ;has an exit
                                    1- 2256     ;; Starting pCode block
                                    1- 2257     .segment "code"; module=main, function=_start_buzzer
     0000                           1- 2259     _start_buzzer:
                                    1- 2260     ; 2 exit points
                                    1- 2261     	.line	310, "main.c"; 	TMRH = 0;								// 
     0000 02rr                      1- 2262     	CLRR	_TMRH
                                    1- 2263     	.line	311, "main.c"; 	TMR1 = 0x40;//0xFF;							// Move FFH to TMR1 (Initial Timer1 register) 
     0001 2140                      1- 2264     	MOVIA	0x40
     0002 00rr                      1- 2265     	SFUN	_TMR1
                                    1- 2266     	.line	312, "main.c"; 	PWM1DUTY = C_PWM_DUTY_25;				// PWM1 Duty = 64/256 = 25%			
     0003 2110                      1- 2267     	MOVIA	0x10
     0004 00rr                      1- 2268     	SFUN	_PWM1DUTY
                                    1- 2269     	.line	313, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB3 , PWM1 output is active high, reloaded from TMR1, non-stop mode 
     0005 2183                      1- 2270     	MOVIA	0x83
     0006 00rr                      1- 2271     	SFUN	_T1CR1
                                    1- 2272     	.line	314, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0007 0200                      1- 2273     	CLRA	
     0008 00rr                      1- 2274     	SFUN	_T1CR2
                                    1- 2275     	.line	316, "main.c"; 	}
                                    1- 2276     	RETURN	
     0009 0010                      3-   38 m1      ret
                                    1- 2277     ; exit point of _start_buzzer
                                    1- 2279     ;***
                                    1- 2280     ;  pBlock Stats: dbName = C
                                    1- 2281     ;***
                                    1- 2282     ;has an exit
                                    1- 2283     ;1 compiler assigned register :
                                    1- 2284     ;   r0x1042
                                    1- 2285     ;; Starting pCode block
                                    1- 2286     .segment "code"; module=main, function=_stop_buzzer
     0000                           1- 2288     _stop_buzzer:
                                    1- 2289     ; 2 exit points
                                    1- 2290     	.line	300, "main.c"; 	TMR1 = 0;
     0000 0200                      1- 2291     	CLRA	
     0001 00rr                      1- 2292     	SFUN	_TMR1
                                    1- 2293     	.line	301, "main.c"; 	PWM1DUTY = 0;
     0002 00rr                      1- 2294     	SFUN	_PWM1DUTY
                                    1- 2295     	.line	302, "main.c"; 	T1CR1 = 0;
     0003 00rr                      1- 2296     	SFUN	_T1CR1
                                    1- 2297     	.line	303, "main.c"; 	T1CR2 = 0;
     0004 0200                      1- 2298     	CLRA	
     0005 00rr                      1- 2299     	SFUN	_T1CR2
                                    1- 2300     	.line	305, "main.c"; 	IOSTB |= 0x08;   //  PB3配置成输入。
     0006 001r                      1- 2301     	IOSTR	_IOSTB
                                    1- 2302     	BANKSEL	r0x1042
     0007 rrrr                      3-  108 m1      .banksel ram_address
     0008 00rr                      1- 2303     	MOVAR	r0x1042
     0009 19rr                      1- 2304     	BSR	r0x1042,3
     000A 01rr                      1- 2305     	MOVR	r0x1042,W
     000B 000r                      1- 2306     	IOST	_IOSTB
                                    1- 2307     	.line	306, "main.c"; 	}
                                    1- 2308     	RETURN	
     000C 0010                      3-   38 m1      ret
                                    1- 2309     ; exit point of _stop_buzzer
                                    1- 2311     ;***
                                    1- 2312     ;  pBlock Stats: dbName = C
                                    1- 2313     ;***
                                    1- 2314     ;has an exit
                                    1- 2315     ;1 compiler assigned register :
                                    1- 2316     ;   r0x1042
                                    1- 2317     ;; Starting pCode block
                                    1- 2318     .segment "code"; module=main, function=_v0_mode
     0000                           1- 2320     _v0_mode:
                                    1- 2321     ; 2 exit points
                                    1- 2322     	.line	289, "main.c"; 	IOSTA |= 0x80;            //PA7   V1
     0000 001r                      1- 2323     	IOSTR	_IOSTA
                                    1- 2324     	BANKSEL	r0x1042
     0001 rrrr                      3-  108 m1      .banksel ram_address
     0002 00rr                      1- 2325     	MOVAR	r0x1042
     0003 1Brr                      1- 2326     	BSR	r0x1042,7
     0004 01rr                      1- 2327     	MOVR	r0x1042,W
     0005 000r                      1- 2328     	IOST	_IOSTA
                                    1- 2329     	.line	290, "main.c"; 	UPDATE_REG(PORTA);	
     0006 01rr                      1- 2330     	MOVR	_PORTA,F
                                    1- 2331     	.line	291, "main.c"; 	IOSTB |= 0x86;
     0007 001r                      1- 2332     	IOSTR	_IOSTB
                                    1- 2333     	BANKSEL	r0x1042
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 00rr                      1- 2334     	MOVAR	r0x1042
     000A 2186                      1- 2335     	MOVIA	0x86
     000B 11rr                      1- 2336     	IORAR	r0x1042,F
     000C 01rr                      1- 2337     	MOVR	r0x1042,W
     000D 000r                      1- 2338     	IOST	_IOSTB
                                    1- 2339     	.line	293, "main.c"; 	IOSTB &= 0x7F;                  //设置PB7为输出
     000E 001r                      1- 2340     	IOSTR	_IOSTB
     000F 00rr                      1- 2341     	MOVAR	r0x1042
     0010 1Frr                      1- 2342     	BCR	r0x1042,7
     0011 01rr                      1- 2343     	MOVR	r0x1042,W
     0012 000r                      1- 2344     	IOST	_IOSTB
                                    1- 2345     	.line	294, "main.c"; 	PORTB &= 0x7F;                  //设置PB7输出低电平
     0013 1Frr                      1- 2346     	BCR	_PORTB,7
                                    1- 2347     	.line	295, "main.c"; 	UPDATE_REG(PORTB);	
     0014 01rr                      1- 2348     	MOVR	_PORTB,F
                                    1- 2349     	.line	296, "main.c"; 	}
                                    1- 2350     	RETURN	
     0015 0010                      3-   38 m1      ret
                                    1- 2351     ; exit point of _v0_mode
                                    1- 2353     ;***
                                    1- 2354     ;  pBlock Stats: dbName = C
                                    1- 2355     ;***
                                    1- 2356     ;has an exit
                                    1- 2357     ;1 compiler assigned register :
                                    1- 2358     ;   r0x1042
                                    1- 2359     ;; Starting pCode block
                                    1- 2360     .segment "code"; module=main, function=_v3_mode
     0000                           1- 2362     _v3_mode:
                                    1- 2363     ; 2 exit points
                                    1- 2364     	.line	280, "main.c"; 	IOSTA |= 0x80;            //PA7   V1
     0000 001r                      1- 2365     	IOSTR	_IOSTA
                                    1- 2366     	BANKSEL	r0x1042
     0001 rrrr                      3-  108 m1      .banksel ram_address
     0002 00rr                      1- 2367     	MOVAR	r0x1042
     0003 1Brr                      1- 2368     	BSR	r0x1042,7
     0004 01rr                      1- 2369     	MOVR	r0x1042,W
     0005 000r                      1- 2370     	IOST	_IOSTA
                                    1- 2371     	.line	281, "main.c"; 	UPDATE_REG(PORTA);
     0006 01rr                      1- 2372     	MOVR	_PORTA,F
                                    1- 2373     	.line	282, "main.c"; 	IOSTB |= 0x86;
     0007 001r                      1- 2374     	IOSTR	_IOSTB
                                    1- 2375     	BANKSEL	r0x1042
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 00rr                      1- 2376     	MOVAR	r0x1042
     000A 2186                      1- 2377     	MOVIA	0x86
     000B 11rr                      1- 2378     	IORAR	r0x1042,F
     000C 01rr                      1- 2379     	MOVR	r0x1042,W
     000D 000r                      1- 2380     	IOST	_IOSTB
                                    1- 2381     	.line	283, "main.c"; 	IOSTB &= 0xFB;                  //设置PB2为输出
     000E 001r                      1- 2382     	IOSTR	_IOSTB
     000F 00rr                      1- 2383     	MOVAR	r0x1042
     0010 1Drr                      1- 2384     	BCR	r0x1042,2
     0011 01rr                      1- 2385     	MOVR	r0x1042,W
     0012 000r                      1- 2386     	IOST	_IOSTB
                                    1- 2387     	.line	284, "main.c"; 	PORTB &= 0xFB;                  //设置PB2输出低电平
     0013 1Drr                      1- 2388     	BCR	_PORTB,2
                                    1- 2389     	.line	285, "main.c"; 	UPDATE_REG(PORTB);	
     0014 01rr                      1- 2390     	MOVR	_PORTB,F
                                    1- 2391     	.line	286, "main.c"; 	}
                                    1- 2392     	RETURN	
     0015 0010                      3-   38 m1      ret
                                    1- 2393     ; exit point of _v3_mode
                                    1- 2395     ;***
                                    1- 2396     ;  pBlock Stats: dbName = C
                                    1- 2397     ;***
                                    1- 2398     ;has an exit
                                    1- 2399     ;1 compiler assigned register :
                                    1- 2400     ;   r0x1042
                                    1- 2401     ;; Starting pCode block
                                    1- 2402     .segment "code"; module=main, function=_v2_mode
     0000                           1- 2404     _v2_mode:
                                    1- 2405     ; 2 exit points
                                    1- 2406     	.line	271, "main.c"; 	IOSTA |= 0x80;            //PA7   V1
     0000 001r                      1- 2407     	IOSTR	_IOSTA
                                    1- 2408     	BANKSEL	r0x1042
     0001 rrrr                      3-  108 m1      .banksel ram_address
     0002 00rr                      1- 2409     	MOVAR	r0x1042
     0003 1Brr                      1- 2410     	BSR	r0x1042,7
     0004 01rr                      1- 2411     	MOVR	r0x1042,W
     0005 000r                      1- 2412     	IOST	_IOSTA
                                    1- 2413     	.line	272, "main.c"; 	UPDATE_REG(PORTA);	
     0006 01rr                      1- 2414     	MOVR	_PORTA,F
                                    1- 2415     	.line	273, "main.c"; 	IOSTB |= 0x86;
     0007 001r                      1- 2416     	IOSTR	_IOSTB
                                    1- 2417     	BANKSEL	r0x1042
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 00rr                      1- 2418     	MOVAR	r0x1042
     000A 2186                      1- 2419     	MOVIA	0x86
     000B 11rr                      1- 2420     	IORAR	r0x1042,F
     000C 01rr                      1- 2421     	MOVR	r0x1042,W
     000D 000r                      1- 2422     	IOST	_IOSTB
                                    1- 2423     	.line	274, "main.c"; 	IOSTB &= 0xFD;                  //设置PB1为输出
     000E 001r                      1- 2424     	IOSTR	_IOSTB
     000F 00rr                      1- 2425     	MOVAR	r0x1042
     0010 1Crr                      1- 2426     	BCR	r0x1042,1
     0011 01rr                      1- 2427     	MOVR	r0x1042,W
     0012 000r                      1- 2428     	IOST	_IOSTB
                                    1- 2429     	.line	275, "main.c"; 	PORTB &= 0xFD;                  //设置PB1输出低电平
     0013 1Crr                      1- 2430     	BCR	_PORTB,1
                                    1- 2431     	.line	276, "main.c"; 	UPDATE_REG(PORTB);	
     0014 01rr                      1- 2432     	MOVR	_PORTB,F
                                    1- 2433     	.line	277, "main.c"; 	}
                                    1- 2434     	RETURN	
     0015 0010                      3-   38 m1      ret
                                    1- 2435     ; exit point of _v2_mode
                                    1- 2437     ;***
                                    1- 2438     ;  pBlock Stats: dbName = C
                                    1- 2439     ;***
                                    1- 2440     ;has an exit
                                    1- 2441     ;1 compiler assigned register :
                                    1- 2442     ;   r0x1042
                                    1- 2443     ;; Starting pCode block
                                    1- 2444     .segment "code"; module=main, function=_v1_mode
     0000                           1- 2446     _v1_mode:
                                    1- 2447     ; 2 exit points
                                    1- 2448     	.line	261, "main.c"; 	IOSTA |= 0x80;            //PA7   V1
     0000 001r                      1- 2449     	IOSTR	_IOSTA
                                    1- 2450     	BANKSEL	r0x1042
     0001 rrrr                      3-  108 m1      .banksel ram_address
     0002 00rr                      1- 2451     	MOVAR	r0x1042
     0003 1Brr                      1- 2452     	BSR	r0x1042,7
     0004 01rr                      1- 2453     	MOVR	r0x1042,W
     0005 000r                      1- 2454     	IOST	_IOSTA
                                    1- 2455     	.line	262, "main.c"; 	IOSTA &= 0x7F;            //PA7   V1 PA7为输出
     0006 001r                      1- 2456     	IOSTR	_IOSTA
     0007 00rr                      1- 2457     	MOVAR	r0x1042
     0008 1Frr                      1- 2458     	BCR	r0x1042,7
     0009 01rr                      1- 2459     	MOVR	r0x1042,W
     000A 000r                      1- 2460     	IOST	_IOSTA
                                    1- 2461     	.line	263, "main.c"; 	PORTA &= 0x7F;                  //设置PA7输出低电平
                                    1- 2462     	BANKSEL	_PORTA
     000B rrrr                      3-  108 m1      .banksel ram_address
     000C 1Frr                      1- 2463     	BCR	_PORTA,7
                                    1- 2464     	.line	264, "main.c"; 	UPDATE_REG(PORTA);	
     000D 01rr                      1- 2465     	MOVR	_PORTA,F
                                    1- 2466     	.line	265, "main.c"; 	IOSTB |= 0x86;
     000E 001r                      1- 2467     	IOSTR	_IOSTB
                                    1- 2468     	BANKSEL	r0x1042
     000F rrrr                      3-  108 m1      .banksel ram_address
     0010 00rr                      1- 2469     	MOVAR	r0x1042
     0011 2186                      1- 2470     	MOVIA	0x86
     0012 11rr                      1- 2471     	IORAR	r0x1042,F
     0013 01rr                      1- 2472     	MOVR	r0x1042,W
     0014 000r                      1- 2473     	IOST	_IOSTB
                                    1- 2474     	.line	266, "main.c"; 	UPDATE_REG(PORTB);	
     0015 01rr                      1- 2475     	MOVR	_PORTB,F
                                    1- 2476     	.line	267, "main.c"; 	}
                                    1- 2477     	RETURN	
     0016 0010                      3-   38 m1      ret
                                    1- 2478     ; exit point of _v1_mode
                                    1- 2480     ;***
                                    1- 2481     ;  pBlock Stats: dbName = C
                                    1- 2482     ;***
                                    1- 2483     ;has an exit
                                    1- 2484     ;functions called:
                                    1- 2485     ;   _tick_GetTickCount
                                    1- 2486     ;   _tick_GetElapsedTime
                                    1- 2487     ;   _tick_GetTickCount
                                    1- 2488     ;   _charge_process
                                    1- 2489     ;   _tick_GetTickCount
                                    1- 2490     ;   _tick_GetElapsedTime
                                    1- 2491     ;   _tick_GetTickCount
                                    1- 2492     ;   _charge_process
                                    1- 2493     ;1 compiler assigned register :
                                    1- 2494     ;   r0x104A
                                    1- 2495     ;; Starting pCode block
                                    1- 2496     .segment "code"; module=main, function=_charger_scan_task
                                    1- 2498     ;local variable name mapping:
     0000                           1- 2500     _charger_scan_task:
                                    1- 2501     ; 2 exit points
                                    1- 2502     	.line	248, "main.c"; 	if (ChargerScanTimer == 0)
                                    1- 2503     	BANKSEL	_charger_scan_task_ChargerScanTimer_65536_47
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 01rr                      1- 2504     	MOVR	_charger_scan_task_ChargerScanTimer_65536_47,W
     0002 11rr                      1- 2505     	IORAR	(_charger_scan_task_ChargerScanTimer_65536_47 + 1),W
     0003 11rr                      1- 2506     	IORAR	(_charger_scan_task_ChargerScanTimer_65536_47 + 2),W
     0004 11rr                      1- 2507     	IORAR	(_charger_scan_task_ChargerScanTimer_65536_47 + 3),W
     0005 0903                      1- 2508     	BTRSS	STATUS,2
                                    1- 2509     	MGOTO	_00190_DS_
     0006 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2510     	.line	250, "main.c"; 	ChargerScanTimer = tick_GetTickCount();
                                    1- 2511     	MCALL	_tick_GetTickCount
     0007 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2512     	BANKSEL	r0x104A
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 00rr                      1- 2513     	MOVAR	r0x104A
                                    1- 2514     	BANKSEL	_charger_scan_task_ChargerScanTimer_65536_47
     000A rrrr                      3-  108 m1      .banksel ram_address
     000B 00rr                      1- 2515     	MOVAR	_charger_scan_task_ChargerScanTimer_65536_47
     000C 02rr                      1- 2516     	CLRR	(_charger_scan_task_ChargerScanTimer_65536_47 + 1)
     000D 02rr                      1- 2517     	CLRR	(_charger_scan_task_ChargerScanTimer_65536_47 + 2)
     000E 02rr                      1- 2518     	CLRR	(_charger_scan_task_ChargerScanTimer_65536_47 + 3)
     000F                           1- 2519     _00190_DS_:
                                    1- 2520     	.line	252, "main.c"; 	if (tick_GetElapsedTime(ChargerScanTimer) >= 1)
                                    1- 2521     	BANKSEL	_charger_scan_task_ChargerScanTimer_65536_47
     000F rrrr                      3-  108 m1      .banksel ram_address
     0010 01rr                      1- 2522     	MOVR	_charger_scan_task_ChargerScanTimer_65536_47,W
                                    1- 2523     	BANKSEL	r0x104A
     0011 rrrr                      3-  108 m1      .banksel ram_address
     0012 00rr                      1- 2524     	MOVAR	r0x104A
                                    1- 2525     	MCALL	_tick_GetElapsedTime
     0013 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2526     	BANKSEL	r0x104A
     0014 rrrr                      3-  108 m1      .banksel ram_address
     0015 00rr                      1- 2527     	MOVAR	r0x104A
                                    1- 2528     ;;unsigned compare: left < lit (0x1=1), size=1
     0016 2101                      1- 2529     	MOVIA	0x01
     0017 04rr                      1- 2530     	SUBAR	r0x104A,W
     0018 0803                      1- 2531     	BTRSS	STATUS,0
                                    1- 2532     	MGOTO	_00193_DS_
     0019 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2533     	.line	254, "main.c"; 	ChargerScanTimer = tick_GetTickCount();
                                    1- 2534     	MCALL	_tick_GetTickCount
     001A 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2535     	BANKSEL	r0x104A
     001B rrrr                      3-  108 m1      .banksel ram_address
     001C 00rr                      1- 2536     	MOVAR	r0x104A
                                    1- 2537     	BANKSEL	_charger_scan_task_ChargerScanTimer_65536_47
     001D rrrr                      3-  108 m1      .banksel ram_address
     001E 00rr                      1- 2538     	MOVAR	_charger_scan_task_ChargerScanTimer_65536_47
     001F 02rr                      1- 2539     	CLRR	(_charger_scan_task_ChargerScanTimer_65536_47 + 1)
     0020 02rr                      1- 2540     	CLRR	(_charger_scan_task_ChargerScanTimer_65536_47 + 2)
     0021 02rr                      1- 2541     	CLRR	(_charger_scan_task_ChargerScanTimer_65536_47 + 3)
                                    1- 2542     	.line	255, "main.c"; 	charge_process();
                                    1- 2543     	MCALL	_charge_process
     0022 2rrr                      3-   64 m1      LCALL rom_address
     0023                           1- 2544     _00193_DS_:
                                    1- 2545     	.line	257, "main.c"; 	}
                                    1- 2546     	RETURN	
     0023 0010                      3-   38 m1      ret
                                    1- 2547     ; exit point of _charger_scan_task
                                    1- 2549     ;***
                                    1- 2550     ;  pBlock Stats: dbName = C
                                    1- 2551     ;***
                                    1- 2552     ;has an exit
                                    1- 2553     ;functions called:
                                    1- 2554     ;   _tick_GetTickCount
                                    1- 2555     ;   _tick_GetElapsedTime
                                    1- 2556     ;   _tick_GetTickCount
                                    1- 2557     ;   _key_process
                                    1- 2558     ;   _tick_GetTickCount
                                    1- 2559     ;   _tick_GetElapsedTime
                                    1- 2560     ;   _tick_GetTickCount
                                    1- 2561     ;   _key_process
                                    1- 2562     ;1 compiler assigned register :
                                    1- 2563     ;   r0x104C
                                    1- 2564     ;; Starting pCode block
                                    1- 2565     .segment "code"; module=main, function=_key_scan_task
                                    1- 2567     ;local variable name mapping:
     0000                           1- 2569     _key_scan_task:
                                    1- 2570     ; 2 exit points
                                    1- 2571     	.line	235, "main.c"; 	if (keyScanTimer == 0)
                                    1- 2572     	BANKSEL	_key_scan_task_keyScanTimer_65536_43
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 01rr                      1- 2573     	MOVR	_key_scan_task_keyScanTimer_65536_43,W
     0002 11rr                      1- 2574     	IORAR	(_key_scan_task_keyScanTimer_65536_43 + 1),W
     0003 11rr                      1- 2575     	IORAR	(_key_scan_task_keyScanTimer_65536_43 + 2),W
     0004 11rr                      1- 2576     	IORAR	(_key_scan_task_keyScanTimer_65536_43 + 3),W
     0005 0903                      1- 2577     	BTRSS	STATUS,2
                                    1- 2578     	MGOTO	_00181_DS_
     0006 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2579     	.line	237, "main.c"; 	keyScanTimer = tick_GetTickCount();
                                    1- 2580     	MCALL	_tick_GetTickCount
     0007 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2581     	BANKSEL	r0x104C
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 00rr                      1- 2582     	MOVAR	r0x104C
                                    1- 2583     	BANKSEL	_key_scan_task_keyScanTimer_65536_43
     000A rrrr                      3-  108 m1      .banksel ram_address
     000B 00rr                      1- 2584     	MOVAR	_key_scan_task_keyScanTimer_65536_43
     000C 02rr                      1- 2585     	CLRR	(_key_scan_task_keyScanTimer_65536_43 + 1)
     000D 02rr                      1- 2586     	CLRR	(_key_scan_task_keyScanTimer_65536_43 + 2)
     000E 02rr                      1- 2587     	CLRR	(_key_scan_task_keyScanTimer_65536_43 + 3)
     000F                           1- 2588     _00181_DS_:
                                    1- 2589     	.line	239, "main.c"; 	if (tick_GetElapsedTime(keyScanTimer) >= 1)
                                    1- 2590     	BANKSEL	_key_scan_task_keyScanTimer_65536_43
     000F rrrr                      3-  108 m1      .banksel ram_address
     0010 01rr                      1- 2591     	MOVR	_key_scan_task_keyScanTimer_65536_43,W
                                    1- 2592     	BANKSEL	r0x104C
     0011 rrrr                      3-  108 m1      .banksel ram_address
     0012 00rr                      1- 2593     	MOVAR	r0x104C
                                    1- 2594     	MCALL	_tick_GetElapsedTime
     0013 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2595     	BANKSEL	r0x104C
     0014 rrrr                      3-  108 m1      .banksel ram_address
     0015 00rr                      1- 2596     	MOVAR	r0x104C
                                    1- 2597     ;;unsigned compare: left < lit (0x1=1), size=1
     0016 2101                      1- 2598     	MOVIA	0x01
     0017 04rr                      1- 2599     	SUBAR	r0x104C,W
     0018 0803                      1- 2600     	BTRSS	STATUS,0
                                    1- 2601     	MGOTO	_00184_DS_
     0019 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2602     	.line	241, "main.c"; 	keyScanTimer = tick_GetTickCount();
                                    1- 2603     	MCALL	_tick_GetTickCount
     001A 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2604     	BANKSEL	r0x104C
     001B rrrr                      3-  108 m1      .banksel ram_address
     001C 00rr                      1- 2605     	MOVAR	r0x104C
                                    1- 2606     	BANKSEL	_key_scan_task_keyScanTimer_65536_43
     001D rrrr                      3-  108 m1      .banksel ram_address
     001E 00rr                      1- 2607     	MOVAR	_key_scan_task_keyScanTimer_65536_43
     001F 02rr                      1- 2608     	CLRR	(_key_scan_task_keyScanTimer_65536_43 + 1)
     0020 02rr                      1- 2609     	CLRR	(_key_scan_task_keyScanTimer_65536_43 + 2)
     0021 02rr                      1- 2610     	CLRR	(_key_scan_task_keyScanTimer_65536_43 + 3)
                                    1- 2611     	.line	242, "main.c"; 	key_process();
                                    1- 2612     	MCALL	_key_process
     0022 2rrr                      3-   64 m1      LCALL rom_address
     0023                           1- 2613     _00184_DS_:
                                    1- 2614     	.line	244, "main.c"; 	}
                                    1- 2615     	RETURN	
     0023 0010                      3-   38 m1      ret
                                    1- 2616     ; exit point of _key_scan_task
                                    1- 2618     ;***
                                    1- 2619     ;  pBlock Stats: dbName = C
                                    1- 2620     ;***
                                    1- 2621     ;has an exit
                                    1- 2622     ;functions called:
                                    1- 2623     ;   _tick_GetTickCount
                                    1- 2624     ;   _Open_digital
                                    1- 2625     ;   _tick_GetElapsedTime
                                    1- 2626     ;   _Close_digital
                                    1- 2627     ;   _tick_GetTickCount
                                    1- 2628     ;   _Open_digital
                                    1- 2629     ;   _tick_GetElapsedTime
                                    1- 2630     ;   _Close_digital
                                    1- 2631     ;1 compiler assigned register :
                                    1- 2632     ;   r0x1042
                                    1- 2633     ;; Starting pCode block
                                    1- 2634     .segment "code"; module=main, function=_digital_process_task
                                    1- 2636     ;local variable name mapping:
     0000                           1- 2638     _digital_process_task:
                                    1- 2639     ; 2 exit points
                                    1- 2640     	.line	217, "main.c"; 	if(control_digital)
                                    1- 2641     	BANKSEL	_control_digital
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 01rr                      1- 2642     	MOVR	_control_digital,W
     0002 0D03                      1- 2643     	BTRSC	STATUS,2
                                    1- 2644     	MGOTO	_00175_DS_
     0003 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2645     	.line	219, "main.c"; 	if (digitalProcessTimer == 0)
                                    1- 2646     	BANKSEL	_digital_process_task_digitalProcessTimer_65536_38
     0004 rrrr                      3-  108 m1      .banksel ram_address
     0005 01rr                      1- 2647     	MOVR	_digital_process_task_digitalProcessTimer_65536_38,W
     0006 11rr                      1- 2648     	IORAR	(_digital_process_task_digitalProcessTimer_65536_38 + 1),W
     0007 11rr                      1- 2649     	IORAR	(_digital_process_task_digitalProcessTimer_65536_38 + 2),W
     0008 11rr                      1- 2650     	IORAR	(_digital_process_task_digitalProcessTimer_65536_38 + 3),W
     0009 0903                      1- 2651     	BTRSS	STATUS,2
                                    1- 2652     	MGOTO	_00170_DS_
     000A 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2653     	.line	221, "main.c"; 	digitalProcessTimer = tick_GetTickCount();
                                    1- 2654     	MCALL	_tick_GetTickCount
     000B 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2655     	BANKSEL	r0x1042
     000C rrrr                      3-  108 m1      .banksel ram_address
     000D 00rr                      1- 2656     	MOVAR	r0x1042
                                    1- 2657     	BANKSEL	_digital_process_task_digitalProcessTimer_65536_38
     000E rrrr                      3-  108 m1      .banksel ram_address
     000F 00rr                      1- 2658     	MOVAR	_digital_process_task_digitalProcessTimer_65536_38
     0010 02rr                      1- 2659     	CLRR	(_digital_process_task_digitalProcessTimer_65536_38 + 1)
     0011 02rr                      1- 2660     	CLRR	(_digital_process_task_digitalProcessTimer_65536_38 + 2)
     0012 02rr                      1- 2661     	CLRR	(_digital_process_task_digitalProcessTimer_65536_38 + 3)
                                    1- 2662     	.line	222, "main.c"; 	Open_digital();
                                    1- 2663     	MCALL	_Open_digital
     0013 2rrr                      3-   64 m1      LCALL rom_address
     0014                           1- 2664     _00170_DS_:
                                    1- 2665     	.line	224, "main.c"; 	if (tick_GetElapsedTime(digitalProcessTimer) >= 20)        //100ms
                                    1- 2666     	BANKSEL	_digital_process_task_digitalProcessTimer_65536_38
     0014 rrrr                      3-  108 m1      .banksel ram_address
     0015 01rr                      1- 2667     	MOVR	_digital_process_task_digitalProcessTimer_65536_38,W
                                    1- 2668     	BANKSEL	r0x1042
     0016 rrrr                      3-  108 m1      .banksel ram_address
     0017 00rr                      1- 2669     	MOVAR	r0x1042
                                    1- 2670     	MCALL	_tick_GetElapsedTime
     0018 2rrr                      3-   64 m1      LCALL rom_address
                                    1- 2671     	BANKSEL	r0x1042
     0019 rrrr                      3-  108 m1      .banksel ram_address
     001A 00rr                      1- 2672     	MOVAR	r0x1042
                                    1- 2673     ;;unsigned compare: left < lit (0x14=20), size=1
     001B 2114                      1- 2674     	MOVIA	0x14
     001C 04rr                      1- 2675     	SUBAR	r0x1042,W
     001D 0803                      1- 2676     	BTRSS	STATUS,0
                                    1- 2677     	MGOTO	_00175_DS_
     001E 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2678     	.line	226, "main.c"; 	digitalProcessTimer = 0;
                                    1- 2679     	BANKSEL	_digital_process_task_digitalProcessTimer_65536_38
     001F rrrr                      3-  108 m1      .banksel ram_address
     0020 02rr                      1- 2680     	CLRR	_digital_process_task_digitalProcessTimer_65536_38
     0021 02rr                      1- 2681     	CLRR	(_digital_process_task_digitalProcessTimer_65536_38 + 1)
     0022 02rr                      1- 2682     	CLRR	(_digital_process_task_digitalProcessTimer_65536_38 + 2)
     0023 02rr                      1- 2683     	CLRR	(_digital_process_task_digitalProcessTimer_65536_38 + 3)
                                    1- 2684     	.line	227, "main.c"; 	control_digital = 0;
                                    1- 2685     	BANKSEL	_control_digital
     0024 rrrr                      3-  108 m1      .banksel ram_address
     0025 02rr                      1- 2686     	CLRR	_control_digital
                                    1- 2687     	.line	228, "main.c"; 	Close_digital();
                                    1- 2688     	MCALL	_Close_digital
     0026 2rrr                      3-   64 m1      LCALL rom_address
     0027                           1- 2689     _00175_DS_:
                                    1- 2690     	.line	231, "main.c"; 	}
                                    1- 2691     	RETURN	
     0027 0010                      3-   38 m1      ret
                                    1- 2692     ; exit point of _digital_process_task
                                    1- 2694     ;***
                                    1- 2695     ;  pBlock Stats: dbName = C
                                    1- 2696     ;***
                                    1- 2697     ;has an exit
                                    1- 2698     ;; Starting pCode block
                                    1- 2699     .segment "code"; module=main, function=_Close_digital
     0000                           1- 2701     _Close_digital:
                                    1- 2702     ; 2 exit points
                                    1- 2703     	.line	212, "main.c"; 	PORTA |= 0x04;
                                    1- 2704     	BANKSEL	_PORTA
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 19rr                      1- 2705     	BSR	_PORTA,2
                                    1- 2706     	.line	213, "main.c"; 	}
                                    1- 2707     	RETURN	
     0002 0010                      3-   38 m1      ret
                                    1- 2708     ; exit point of _Close_digital
                                    1- 2710     ;***
                                    1- 2711     ;  pBlock Stats: dbName = C
                                    1- 2712     ;***
                                    1- 2713     ;has an exit
                                    1- 2714     ;; Starting pCode block
                                    1- 2715     .segment "code"; module=main, function=_Open_digital
     0000                           1- 2717     _Open_digital:
                                    1- 2718     ; 2 exit points
                                    1- 2719     	.line	208, "main.c"; 	PORTA &= 0xFB;
                                    1- 2720     	BANKSEL	_PORTA
     0000 rrrr                      3-  108 m1      .banksel ram_address
     0001 1Drr                      1- 2721     	BCR	_PORTA,2
                                    1- 2722     	.line	209, "main.c"; 	}
                                    1- 2723     	RETURN	
     0002 0010                      3-   38 m1      ret
                                    1- 2724     ; exit point of _Open_digital
                                    1- 2726     ;***
                                    1- 2727     ;  pBlock Stats: dbName = C
                                    1- 2728     ;***
                                    1- 2729     ;has an exit
                                    1- 2730     ;1 compiler assigned register :
                                    1- 2731     ;   r0x1042
                                    1- 2732     ;; Starting pCode block
                                    1- 2733     .segment "code"; module=main, function=_digital_initial
     0000                           1- 2735     _digital_initial:
                                    1- 2736     ; 2 exit points
                                    1- 2737     	.line	201, "main.c"; 	IOSTA &= 0xFB;
     0000 001r                      1- 2738     	IOSTR	_IOSTA
                                    1- 2739     	BANKSEL	r0x1042
     0001 rrrr                      3-  108 m1      .banksel ram_address
     0002 00rr                      1- 2740     	MOVAR	r0x1042
     0003 1Drr                      1- 2741     	BCR	r0x1042,2
     0004 01rr                      1- 2742     	MOVR	r0x1042,W
     0005 000r                      1- 2743     	IOST	_IOSTA
                                    1- 2744     	.line	202, "main.c"; 	BPHCON &= (char)~C_PA2_PHB;
     0006 1Drr                      1- 2745     	BCR	_BPHCON,2
                                    1- 2746     	.line	203, "main.c"; 	PORTA &= 0xFB;
                                    1- 2747     	BANKSEL	_PORTA
     0007 rrrr                      3-  108 m1      .banksel ram_address
     0008 1Drr                      1- 2748     	BCR	_PORTA,2
                                    1- 2749     	.line	204, "main.c"; 	UPDATE_REG(PORTA);	
     0009 01rr                      1- 2750     	MOVR	_PORTA,F
                                    1- 2751     	.line	205, "main.c"; 	}
                                    1- 2752     	RETURN	
     000A 0010                      3-   38 m1      ret
                                    1- 2753     ; exit point of _digital_initial
                                    1- 2755     ;***
                                    1- 2756     ;  pBlock Stats: dbName = C
                                    1- 2757     ;***
                                    1- 2758     ;has an exit
                                    1- 2759     ;1 compiler assigned register :
                                    1- 2760     ;   r0x1042
                                    1- 2761     ;; Starting pCode block
                                    1- 2762     .segment "code"; module=main, function=_volume_initial
     0000                           1- 2764     _volume_initial:
                                    1- 2765     ; 2 exit points
                                    1- 2766     	.line	194, "main.c"; 	IOSTA |= 0x80;
     0000 001r                      1- 2767     	IOSTR	_IOSTA
                                    1- 2768     	BANKSEL	r0x1042
     0001 rrrr                      3-  108 m1      .banksel ram_address
     0002 00rr                      1- 2769     	MOVAR	r0x1042
     0003 1Brr                      1- 2770     	BSR	r0x1042,7
     0004 01rr                      1- 2771     	MOVR	r0x1042,W
     0005 000r                      1- 2772     	IOST	_IOSTA
                                    1- 2773     	.line	195, "main.c"; 	UPDATE_REG(PORTA);	
     0006 01rr                      1- 2774     	MOVR	_PORTA,F
                                    1- 2775     	.line	196, "main.c"; 	IOSTB |= 0x86;
     0007 001r                      1- 2776     	IOSTR	_IOSTB
                                    1- 2777     	BANKSEL	r0x1042
     0008 rrrr                      3-  108 m1      .banksel ram_address
     0009 00rr                      1- 2778     	MOVAR	r0x1042
     000A 2186                      1- 2779     	MOVIA	0x86
     000B 11rr                      1- 2780     	IORAR	r0x1042,F
     000C 01rr                      1- 2781     	MOVR	r0x1042,W
     000D 000r                      1- 2782     	IOST	_IOSTB
                                    1- 2783     	.line	197, "main.c"; 	UPDATE_REG(PORTB);	
     000E 01rr                      1- 2784     	MOVR	_PORTB,F
                                    1- 2785     	.line	198, "main.c"; 	}
                                    1- 2786     	RETURN	
     000F 0010                      3-   38 m1      ret
                                    1- 2787     ; exit point of _volume_initial
                                    1- 2789     ;***
                                    1- 2790     ;  pBlock Stats: dbName = C
                                    1- 2791     ;***
                                    1- 2792     ;has an exit
                                    1- 2793     ;1 compiler assigned register :
                                    1- 2794     ;   r0x1042
                                    1- 2795     ;; Starting pCode block
                                    1- 2796     .segment "code"; module=main, function=_key_initial
     0000                           1- 2798     _key_initial:
                                    1- 2799     ; 2 exit points
                                    1- 2800     	.line	167, "main.c"; 	BPHCON &= (char)~C_PB6_PHB;
     0000 1Frr                      1- 2801     	BCR	_BPHCON,6
                                    1- 2802     	.line	168, "main.c"; 	BWUCON |= C_PB6_Wakeup;					// Enable PB6 input change wakeup function
     0001 1Brr                      1- 2803     	BSR	_BWUCON,6
                                    1- 2804     	.line	169, "main.c"; 	IOSTB  |= C_PB6_Input;					// Set PB6 to input mode,others set to output mode   置高为输入
     0002 001r                      1- 2805     	IOSTR	_IOSTB
                                    1- 2806     	BANKSEL	r0x1042
     0003 rrrr                      3-  108 m1      .banksel ram_address
     0004 00rr                      1- 2807     	MOVAR	r0x1042
     0005 1Brr                      1- 2808     	BSR	r0x1042,6
     0006 01rr                      1- 2809     	MOVR	r0x1042,W
     0007 000r                      1- 2810     	IOST	_IOSTB
                                    1- 2811     	.line	170, "main.c"; 	PORTB  |= 0x40;								// PORTB data buffer=0x00 
     0008 1Brr                      1- 2812     	BSR	_PORTB,6
                                    1- 2813     	.line	173, "main.c"; 	BPHCON &= (char)~C_PB0_PHB;             //1,上拉
     0009 1Crr                      1- 2814     	BCR	_BPHCON,0
                                    1- 2815     	.line	176, "main.c"; 	IOSTB  |= C_PB0_Input;					// Set PB4 to input mode,others set to output mode   置高为输入
     000A 001r                      1- 2816     	IOSTR	_IOSTB
     000B 00rr                      1- 2817     	MOVAR	r0x1042
     000C 18rr                      1- 2818     	BSR	r0x1042,0
     000D 01rr                      1- 2819     	MOVR	r0x1042,W
     000E 000r                      1- 2820     	IOST	_IOSTB
                                    1- 2821     	.line	177, "main.c"; 	PORTB  |= 0x01;								// PORTB data buffer=0x00 	
     000F 18rr                      1- 2822     	BSR	_PORTB,0
                                    1- 2823     	.line	179, "main.c"; 	UPDATE_REG(PORTB);	
     0010 01rr                      1- 2824     	MOVR	_PORTB,F
                                    1- 2825     	.line	181, "main.c"; 	INTEDG = C_INT0_En | C_INT0_RisingEdge;//C_INT0_FallingEdge;		// External interrupt 0 will be set while rising edge occurs on pin PB4
     0011 2111                      1- 2826     	MOVIA	0x11
     0012 00rr                      1- 2827     	MOVAR	_INTEDG
                                    1- 2828     	.line	182, "main.c"; 	INTE = C_INT_EXT0 | C_INT_PABKey;					// Enable PortB input change interrupt
     0013 2106                      1- 2829     	MOVIA	0x06
     0014 00rr                      1- 2830     	MOVAR	_INTE
                                    1- 2831     	.line	184, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 2832     	CLRR	_INTF
                                    1- 2833     	.line	187, "main.c"; 	OSCCR = C_FLOSC_Sel;					// OSCCR[0]=0 , FOSC is Low-frequency oscillation (FLOSC)
     0016 0200                      1- 2834     	CLRA	
     0017 00rr                      1- 2836     	SFUN	_OSCCR
     0018 0000                      1- 2837     	NOP	
                                    1- 2838     	.line	190, "main.c"; 	OSCCR = C_FHOSC_Sel;					// OSCCR[0]=1 , FOSC is high-frequency oscillation (FHOSC)
     0019 2101                      1- 2839     	MOVIA	0x01
     001A 00rr                      1- 2841     	SFUN	_OSCCR
     001B 0000                      1- 2842     	NOP	
                                    1- 2843     	.line	191, "main.c"; 	}
                                    1- 2844     	RETURN	
     001C 0010                      3-   38 m1      ret
                                    1- 2845     ; exit point of _key_initial
                                    1- 2847     ;***
                                    1- 2848     ;  pBlock Stats: dbName = C
                                    1- 2849     ;***
                                    1- 2850     ;has an exit
                                    1- 2851     ;1 compiler assigned register :
                                    1- 2852     ;   r0x104B
                                    1- 2853     ;; Starting pCode block
                                    1- 2854     .segment "code"; module=main, function=_key_process
     0000                           1- 2856     _key_process:
                                    1- 2857     ; 2 exit points
                                    1- 2858     	.line	133, "main.c"; 	key_press = (~PORTB)&0x40;
     0000 07rr                      1- 2859     	COMR	_PORTB,W
                                    1- 2860     	BANKSEL	r0x104B
     0001 rrrr                      3-  108 m1      .banksel ram_address
     0002 00rr                      1- 2861     	MOVAR	r0x104B
     0003 0Brr                      1- 2862     	BTRSS	r0x104B,6
                                    1- 2863     	MGOTO	_00142_DS_
     0004 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2864     	.line	136, "main.c"; 	key_release_timer = 0;           //清空按键松开计时器
                                    1- 2865     	BANKSEL	_key_release_timer
     0005 rrrr                      3-  108 m1      .banksel ram_address
     0006 02rr                      1- 2866     	CLRR	_key_release_timer
                                    1- 2867     	.line	137, "main.c"; 	if((++key_press_timer>=4)&&(key_release_flag))        //如果按下超过40ms,
                                    1- 2868     	BANKSEL	_key_press_timer
     0007 rrrr                      3-  108 m1      .banksel ram_address
     0008 05rr                      1- 2869     	INCR	_key_press_timer,F
     0009 0D03                      1- 2870     	BTRSC	STATUS,2
     000A 05rr                      1- 2871     	INCR	(_key_press_timer + 1),F
                                    1- 2872     ;;unsigned compare: left < lit (0x4=4), size=2
     000B 2104                      1- 2873     	MOVIA	0x04
     000C 04rr                      1- 2874     	SUBAR	_key_press_timer,W
     000D 2100                      1- 2875     	MOVIA	0x00
     000E 35rr                      1- 2876     	SBCAR	(_key_press_timer + 1),W
     000F 0803                      1- 2877     	BTRSS	STATUS,0
                                    1- 2878     	MGOTO	_00144_DS_
     0010 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2879     	BANKSEL	_key_release_flag
     0011 rrrr                      3-  108 m1      .banksel ram_address
     0012 01rr                      1- 2880     	MOVR	_key_release_flag,W
     0013 0D03                      1- 2881     	BTRSC	STATUS,2
                                    1- 2882     	MGOTO	_00144_DS_
     0014 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2883     	.line	139, "main.c"; 	key_press_flag = 1;
     0015 2101                      1- 2884     	MOVIA	0x01
                                    1- 2885     	BANKSEL	_key_press_flag
     0016 rrrr                      3-  108 m1      .banksel ram_address
     0017 00rr                      1- 2886     	MOVAR	_key_press_flag
                                    1- 2887     	.line	140, "main.c"; 	key_long_flag = 0;
                                    1- 2888     	BANKSEL	_key_long_flag
     0018 rrrr                      3-  108 m1      .banksel ram_address
     0019 02rr                      1- 2889     	CLRR	_key_long_flag
                                    1- 2890     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2891     ;;unsigned compare: left >= lit (0x97=151), size=2
                                    1- 2892     	.line	141, "main.c"; 	if((key_press_timer > 150)&&(!key_long))    //如果时间超过3000ms
     001A 2197                      1- 2893     	MOVIA	0x97
                                    1- 2894     	BANKSEL	_key_press_timer
     001B rrrr                      3-  108 m1      .banksel ram_address
     001C 04rr                      1- 2895     	SUBAR	_key_press_timer,W
     001D 2100                      1- 2896     	MOVIA	0x00
     001E 35rr                      1- 2897     	SBCAR	(_key_press_timer + 1),W
     001F 0803                      1- 2898     	BTRSS	STATUS,0
                                    1- 2899     	MGOTO	_00144_DS_
     0020 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2900     	BANKSEL	_key_long
     0021 rrrr                      3-  108 m1      .banksel ram_address
     0022 01rr                      1- 2901     	MOVR	_key_long,W
     0023 0903                      1- 2902     	BTRSS	STATUS,2
                                    1- 2903     	MGOTO	_00144_DS_
     0024 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2904     	.line	143, "main.c"; 	key_long = 1;
     0025 2101                      1- 2905     	MOVIA	0x01
     0026 00rr                      1- 2906     	MOVAR	_key_long
                                    1- 2907     	.line	144, "main.c"; 	key_long_flag = 1;
                                    1- 2908     	BANKSEL	_key_long_flag
     0027 rrrr                      3-  108 m1      .banksel ram_address
     0028 00rr                      1- 2909     	MOVAR	_key_long_flag
                                    1- 2910     	.line	145, "main.c"; 	key_release_flag = 0;
                                    1- 2911     	BANKSEL	_key_release_flag
     0029 rrrr                      3-  108 m1      .banksel ram_address
     002A 02rr                      1- 2912     	CLRR	_key_release_flag
                                    1- 2913     	MGOTO	_00144_DS_
     002B 3rrr                      3-   61 m1      LGOTO rom_address
     002C                           1- 2914     _00142_DS_:
                                    1- 2915     	.line	151, "main.c"; 	key_press_timer = 0;
                                    1- 2916     	BANKSEL	_key_press_timer
     002C rrrr                      3-  108 m1      .banksel ram_address
     002D 02rr                      1- 2917     	CLRR	_key_press_timer
     002E 02rr                      1- 2918     	CLRR	(_key_press_timer + 1)
                                    1- 2919     	.line	152, "main.c"; 	if((++key_release_timer>=4)&&(key_press_flag))
                                    1- 2920     	BANKSEL	_key_release_timer
     002F rrrr                      3-  108 m1      .banksel ram_address
     0030 05rr                      1- 2921     	INCR	_key_release_timer,F
                                    1- 2922     ;;unsigned compare: left < lit (0x4=4), size=1
     0031 2104                      1- 2923     	MOVIA	0x04
     0032 04rr                      1- 2924     	SUBAR	_key_release_timer,W
     0033 0803                      1- 2925     	BTRSS	STATUS,0
                                    1- 2926     	MGOTO	_00144_DS_
     0034 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2927     	BANKSEL	_key_press_flag
     0035 rrrr                      3-  108 m1      .banksel ram_address
     0036 01rr                      1- 2928     	MOVR	_key_press_flag,W
     0037 0D03                      1- 2929     	BTRSC	STATUS,2
                                    1- 2930     	MGOTO	_00144_DS_
     0038 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2931     	.line	154, "main.c"; 	key_release_flag = 1;
     0039 2101                      1- 2932     	MOVIA	0x01
                                    1- 2933     	BANKSEL	_key_release_flag
     003A rrrr                      3-  108 m1      .banksel ram_address
     003B 00rr                      1- 2934     	MOVAR	_key_release_flag
                                    1- 2935     	.line	155, "main.c"; 	key_press_flag = 0;
                                    1- 2936     	BANKSEL	_key_press_flag
     003C rrrr                      3-  108 m1      .banksel ram_address
     003D 02rr                      1- 2937     	CLRR	_key_press_flag
                                    1- 2938     	.line	156, "main.c"; 	if((!key_long_flag)&&(!wakeupFlag))
                                    1- 2939     	BANKSEL	_key_long_flag
     003E rrrr                      3-  108 m1      .banksel ram_address
     003F 01rr                      1- 2940     	MOVR	_key_long_flag,W
     0040 0903                      1- 2941     	BTRSS	STATUS,2
                                    1- 2942     	MGOTO	_00144_DS_
     0041 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2943     	BANKSEL	_wakeupFlag
     0042 rrrr                      3-  108 m1      .banksel ram_address
     0043 01rr                      1- 2944     	MOVR	_wakeupFlag,W
     0044 0903                      1- 2945     	BTRSS	STATUS,2
                                    1- 2946     	MGOTO	_00144_DS_
     0045 3rrr                      3-   61 m1      LGOTO rom_address
                                    1- 2947     	.line	158, "main.c"; 	key_click = 1;
     0046 2101                      1- 2948     	MOVIA	0x01
                                    1- 2949     	BANKSEL	_key_click
     0047 rrrr                      3-  108 m1      .banksel ram_address
     0048 00rr                      1- 2950     	MOVAR	_key_click
     0049                           1- 2951     _00144_DS_:
                                    1- 2952     	.line	162, "main.c"; 	}
                                    1- 2953     	RETURN	
     0049 0010                      3-   38 m1      ret
                                    1- 2954     ; exit point of _key_process
                                    1- 2957     ;	code size estimation:
                                    1- 2958     ;	 1047+  276 =  1323 instructions ( 3198 byte)
                                    1- 2960     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 00000012
__processor__           Constant 0081C720
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8bm72a.inc
003 common.inc
004 main.c

PROCESSOR    = NY8BM72A (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
